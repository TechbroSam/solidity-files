{
	"id": "6b051d5e6710ffdafa6fd7f574d864a5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Copy_oatfinally.sol": {
				"content": "/**\n\n$OAT is a token created for those who have suffered too much loss in the crypto space. The rugpulls\nand honepots can be very annoying and we have all been there. $OAT aims to help the best it can. To make generational\nwealth, just HODL anon. The only mechanism for now, is to buy back and burn from the tax which wil increase the value of the token.\n100% community token and 100% supply to Baseswap and Uniswap V2 later on. Final tax 2/2. \n\nWe are launching on base first then on ethereum mainnet later on so we could take advantage of the volume for more\nbuy back and burn, especially on the base network. This will make history!!! \n\nPlease note: We are making no promises but together, we can achieve greatness!\n\nBelow are our contacts for now, please do not get scammed!\n\n$OAT - THE GOAL IS $1 AND BEYOND!\n\nhttps://twitter.com/anon1min\nhttps://t.me/anon1minETH\n\n\n**/\n\n// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ninterface IFactoryV2 {\n    event PairCreated(\n        address indexed token0,\n        address indexed token1,\n        address lpPair,\n        uint256\n    );\n\n    function getPair(address tokenA, address tokenB)\n        external\n        view\n        returns (address lpPair);\n\n    function createPair(address tokenA, address tokenB)\n        external\n        returns (address lpPair);\n}\n\ninterface IRouter01 {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n\n    function addLiquidityETH(\n        address token,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        payable\n        returns (\n            uint256 amountToken,\n            uint256 amountETH,\n            uint256 liquidity\n        );\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        returns (\n            uint256 amountA,\n            uint256 amountB,\n            uint256 liquidity\n        );\n\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n}\n\ninterface IRouter02 is IRouter01 {\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external;\n\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable;\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external;\n\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n}\n\n\n\ncontract OneAnonataTime is Context, Ownable, IERC20 {\n    function totalSupply() external pure override returns (uint256) {\n        if (_totalSupply == 0) {\n            revert();\n        }\n        return _totalSupply;\n    }\n\n    function decimals() external pure returns (uint8) {\n        if (_totalSupply == 0) {\n            revert();\n        }\n        return _decimals;\n    }\n\n    function symbol() external pure  returns (string memory) {\n        return _symbol;\n    }\n\n    function name() external pure  returns (string memory) {\n        return _name;\n    }\n\n    function getOwner() external view  returns (address) {\n        return owner();\n    }\n\n    function allowance(address holder, address spender)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        return _allowances[holder][spender];\n    }\n\n    function balanceOf(address account) public view override returns (uint256) {\n        return balance[account];\n    }\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n    mapping(address => bool) private _noFee;\n    mapping(address => bool) private isLpPair;\n    mapping(address => uint256) private balance;\n\n    uint256 public constant _totalSupply = 100_000_000 * 10**18;\n    uint256 public swapThreshold = 30_000;\n    uint256 public constant sellfee = 2;\n    uint256 public constant fee_denominator = 100;\n\n    address payable private oatAddress =\n        payable(0x845d553BD206c5f1773c063b452D00Aa942c3BEC);\n\n    IRouter02 public swapRouter;\n    string private constant _name = unicode\"One Anon\";\n    string private constant _symbol = unicode\"$OAT\";\n    uint8 private constant _decimals = 18;\n    address public constant DEAD_WALLET =\n        0x000000000000000000000000000000000000dEaD;\n    address public lpPair;\n    bool private inSwap;\n\n    modifier inSwapFlag() {\n        inSwap = true;\n        _;\n        inSwap = false;\n    }\n\n    event updateThresold(uint256 amount);\n\n    constructor() {\n        _noFee[msg.sender] = true;\n        _noFee[address(this)] = true;\n\n        swapRouter = IRouter02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n        balance[msg.sender] = _totalSupply;\n        emit Transfer(address(0), msg.sender, _totalSupply);\n\n        lpPair = IFactoryV2(swapRouter.factory()).createPair(\n            swapRouter.WETH(),\n            address(this)\n        );\n        isLpPair[lpPair] = true;\n        _approve(msg.sender, address(swapRouter), type(uint256).max);\n        _approve(address(this), address(swapRouter), type(uint256).max);\n    }\n\n    receive() external payable {}\n\n    function transfer(address recipient, uint256 amount)\n        public\n        override\n        returns (bool)\n    {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function approve(address spender, uint256 amount)\n        external\n        override\n        returns (bool)\n    {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    function _approve(\n        address sender,\n        address spender,\n        uint256 amount\n    ) internal {\n        require(sender != address(0), \"ERC20: Zero Address\");\n        require(spender != address(0), \"ERC20: Zero Address\");\n        _allowances[sender][spender] = amount;\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external override returns (bool) {\n        if (_allowances[sender][msg.sender] != type(uint256).max) {\n            _allowances[sender][msg.sender] -= amount;\n        }\n\n        return _transfer(sender, recipient, amount);\n    }\n\n    function isNoFeeWallet(address account) external view returns (bool) {\n        return _noFee[account];\n    }\n\n    function is_sell(address ins, address out) internal view returns (bool) {\n        bool _is_sell = isLpPair[out] && !isLpPair[ins];\n        return _is_sell;\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal returns (bool) {\n        bool takeFee = true;\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(amount > 0, \"Transfer amount must be greater than zero\");\n\n        if (is_sell(from, to) && !inSwap) {\n            uint256 contractTokenBalance = balanceOf(address(this));\n            if (contractTokenBalance >= swapThreshold) {\n                internalSwap(contractTokenBalance);\n            }\n        }\n\n        if (_noFee[from] || _noFee[to]) {\n            takeFee = false;\n        }\n        balance[from] -= amount;\n        uint256 amountAfterFee = (takeFee)\n            ? takeTaxes(from, is_sell(from, to), amount)\n            : amount;\n        balance[to] += amountAfterFee;\n        emit Transfer(from, to, amountAfterFee);\n\n        return true;\n    }\n\n    function takeTaxes(\n        address from,\n        bool issell,\n        uint256 amount\n    ) internal returns (uint256) {\n        uint256 fee = 0;\n        if (issell) fee = sellfee;\n        if (fee == 0) return amount;\n\n        uint256 feeAmount = (amount * fee) / fee_denominator;\n        if (feeAmount > 0) {\n            balance[address(this)] += feeAmount;\n            emit Transfer(from, address(this), feeAmount);\n        }\n        return amount - feeAmount;\n    }\n\n    function internalSwap(uint256 contractTokenBalance) internal inSwapFlag {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = swapRouter.WETH();\n\n        if (\n            _allowances[address(this)][address(swapRouter)] != type(uint256).max\n        ) {\n            _allowances[address(this)][address(swapRouter)] = type(uint256).max;\n        }\n\n        try\n            swapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\n                contractTokenBalance,\n                0,\n                path,\n                address(this),\n                block.timestamp\n            )\n        {} catch {\n            return;\n        }\n        bool success;\n\n        if (address(this).balance > 0)\n            (success, ) = oatAddress.call{value: address(this).balance}(\"\");\n    }\n\n    function changeThreshold(uint256 amount) external onlyOwner {\n        require(amount >= 100, \"Amount lower not accepted.\");\n        swapThreshold = amount;\n        emit updateThresold(swapThreshold);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa2646970667358221220ce6fd47ad0ad2679809533356ee07301f943af2a2adf872539c601007319177364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_222": {
									"entryPoint": null,
									"id": 222,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:7"
															},
															"nodeType": "YulIf",
															"src": "698:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:7",
																"statements": []
															},
															"src": "779:133:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:840:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:7"
															},
															"nodeType": "YulIf",
															"src": "1119:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:7"
															},
															"nodeType": "YulIf",
															"src": "1256:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:7"
															},
															"nodeType": "YulIf",
															"src": "1429:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:7",
														"type": ""
													}
												],
												"src": "991:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:7"
															},
															"nodeType": "YulIf",
															"src": "1701:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:7"
															},
															"nodeType": "YulIf",
															"src": "1771:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:7",
														"type": ""
													}
												],
												"src": "1558:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:7",
														"type": ""
													}
												],
												"src": "1943:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:7",
																			"statements": []
																		},
																		"src": "2516:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:7"
															},
															"nodeType": "YulIf",
															"src": "2160:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:7",
														"type": ""
													}
												],
												"src": "2069:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:7",
														"type": ""
													}
												],
												"src": "2619:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:7"
															},
															"nodeType": "YulIf",
															"src": "2929:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:7",
																					"statements": []
																				},
																				"src": "3376:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:7",
														"type": ""
													}
												],
												"src": "2790:1352:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220ce6fd47ad0ad2679809533356ee07301f943af2a2adf872539c601007319177364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE PUSH16 0xD47AD0AD2679809533356EE07301F943 0xAF 0x2A 0x2A 0xDF DUP8 0x25 CODECOPY 0xC6 ADD STOP PUSH20 0x19177364736F6C63430008130033000000000000 ",
							"sourceMap": "1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:7:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:7;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:7;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:7;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:7;;;3992:26;3943:89;-1:-1:-1;;2747:1:7;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:7;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:7;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:7;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:7:o;:::-;1532:11312:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_763": {
									"entryPoint": null,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_698": {
									"entryPoint": 858,
									"id": 698,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_752": {
									"entryPoint": null,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_741": {
									"entryPoint": 1150,
									"id": 741,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_524": {
									"entryPoint": 1272,
									"id": 524,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_319": {
									"entryPoint": 815,
									"id": 319,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_344": {
									"entryPoint": 562,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_276": {
									"entryPoint": null,
									"id": 276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_252": {
									"entryPoint": null,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_447": {
									"entryPoint": 673,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_406": {
									"entryPoint": 624,
									"id": 406,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_232": {
									"entryPoint": 416,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_242": {
									"entryPoint": 658,
									"id": 242,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_262": {
									"entryPoint": null,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_377": {
									"entryPoint": 588,
									"id": 377,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_301": {
									"entryPoint": 801,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:7"
															},
															"nodeType": "YulIf",
															"src": "664:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:7",
														"type": ""
													}
												],
												"src": "567:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:7"
															},
															"nodeType": "YulIf",
															"src": "842:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:7",
														"type": ""
													}
												],
												"src": "745:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:7",
														"type": ""
													}
												],
												"src": "1004:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:7",
														"type": ""
													}
												],
												"src": "1196:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:7"
															},
															"nodeType": "YulIf",
															"src": "1492:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:7",
														"type": ""
													}
												],
												"src": "1378:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:7",
														"type": ""
													}
												],
												"src": "1711:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:7"
															},
															"nodeType": "YulIf",
															"src": "1980:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:7",
														"type": ""
													}
												],
												"src": "1900:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:7"
															},
															"nodeType": "YulIf",
															"src": "2188:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:7",
														"type": ""
													}
												],
												"src": "2091:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:7"
															},
															"nodeType": "YulIf",
															"src": "2499:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:7"
															},
															"nodeType": "YulIf",
															"src": "2569:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:7",
														"type": ""
													}
												],
												"src": "2356:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:7"
															},
															"nodeType": "YulIf",
															"src": "2824:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:7",
														"type": ""
													}
												],
												"src": "2741:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:7",
														"type": ""
													}
												],
												"src": "2968:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:7",
														"type": ""
													}
												],
												"src": "3374:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:7",
														"type": ""
													}
												],
												"src": "3779:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:7",
														"type": ""
													}
												],
												"src": "4182:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:7",
														"type": ""
													}
												],
												"src": "4540:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:7",
														"type": ""
													}
												],
												"src": "4946:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:7",
														"type": ""
													}
												],
												"src": "5350:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220ce6fd47ad0ad2679809533356ee07301f943af2a2adf872539c601007319177364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE PUSH16 0xD47AD0AD2679809533356EE07301F943 0xAF 0x2A 0x2A 0xDF DUP8 0x25 CODECOPY 0xC6 ADD STOP PUSH20 0x19177364736F6C63430008130033000000000000 ",
							"sourceMap": "1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;4444:197:2;1004:187:7;3255:106:2;3342:12;;3255:106;;;1342:25:7;;;1330:2;1315:18;3255:106:2;1196:177:7;5203:256:2;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:7;;1841:2;1826:18;3104:91:2;1711:184:7;5854:234:2;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:5;4581:32:2;719:10:5;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:5;5356:38:2;5372:4;719:10:5;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;5854:234::-;5942:4;719:10:5;5996:64:2;719:10:5;6012:7:2;6049:10;6021:25;719:10:5;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:5;6668:4:2;6749:25;719:10:5;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;3170:2:7;6784:85:2;;;3152:21:7;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:7;;;3292:35;3344:19;;6784:85:2;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:5;3873:28:2;719:10:5;3890:2:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;3576:2:7;10550:68:2;;;3558:21:7;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:7;;;3698:34;3749:19;;10550:68:2;3374:400:7;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;3981:2:7;10628:68:2;;;3963:21:7;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:7;;;4103:32;4152:19;;10628:68:2;3779:398:7;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:7;;;10758:32:2;;1315:18:7;10758:32:2;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;4384:2:7;11297:68:2;;;4366:21:7;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:2;4182:353:7;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;4742:2:7;7544:68:2;;;4724:21:7;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:7;;;4864:35;4916:19;;7544:68:2;4540:401:7;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;5148:2:7;7622:64:2;;;5130:21:7;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:7;;;5270:33;5320:19;;7622:64:2;4946:399:7;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;5552:2:7;7793:72:2;;;5534:21:7;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:7;;;5674:36;5727:19;;7793:72:2;5350:402:7;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:7;;;8114:13:2;;8163:26;;1315:18:7;8163:26:2;;;;;;;8200:37;12073:91;14:548:7;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:7:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24628",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51138",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce6fd47ad0ad2679809533356ee07301f943af2a2adf872539c601007319177364736f6c63430008130033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Copy_oatfinally.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 193,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 199,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 205,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Copy_oatfinally.sol": {
				"IFactoryV2": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "lpPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "lpPair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "lpPair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396",
							"getPair(address,address)": "e6a43905"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Copy_oatfinally.sol\":\"IFactoryV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Copy_oatfinally.sol\":{\"keccak256\":\"0x561d3ab9a5cda45eef8a8ef839301aaba8daaa591c06c6ffd1b3f044fcda671a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6192ad08a23ed4741310d5874f14d0086238b7baa87a94b5abd346357ae235\",\"dweb:/ipfs/QmcK3Ag6tqAfkMTixzqNzt5pY7diR5CBXfMt1kYk1Qt82w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IRouter01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Copy_oatfinally.sol\":\"IRouter01\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Copy_oatfinally.sol\":{\"keccak256\":\"0x561d3ab9a5cda45eef8a8ef839301aaba8daaa591c06c6ffd1b3f044fcda671a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6192ad08a23ed4741310d5874f14d0086238b7baa87a94b5abd346357ae235\",\"dweb:/ipfs/QmcK3Ag6tqAfkMTixzqNzt5pY7diR5CBXfMt1kYk1Qt82w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IRouter02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Copy_oatfinally.sol\":\"IRouter02\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Copy_oatfinally.sol\":{\"keccak256\":\"0x561d3ab9a5cda45eef8a8ef839301aaba8daaa591c06c6ffd1b3f044fcda671a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6192ad08a23ed4741310d5874f14d0086238b7baa87a94b5abd346357ae235\",\"dweb:/ipfs/QmcK3Ag6tqAfkMTixzqNzt5pY7diR5CBXfMt1kYk1Qt82w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"OneAnonataTime": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "updateThresold",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEAD_WALLET",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee_denominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isNoFeeWallet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellfee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract IRouter02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Copy_oatfinally.sol\":3811:10175  contract OneAnonataTime is Context, Ownable, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Copy_oatfinally.sol\":5087:5093  30_000 */\n  0x7530\n    /* \"contracts/Copy_oatfinally.sol\":5056:5093  uint256 public swapThreshold = 30_000 */\n  0x05\n  sstore\n    /* \"contracts/Copy_oatfinally.sol\":5192:5288  address payable private oatAddress =... */\n  0x06\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Copy_oatfinally.sol\":5245:5287  0x845d553BD206c5f1773c063b452D00Aa942c3BEC */\n  0x845d553bd206c5f1773c063b452d00aa942c3bec\n    /* \"contracts/Copy_oatfinally.sol\":5192:5288  address payable private oatAddress =... */\n  or\n  swap1\n  sstore\n    /* \"contracts/Copy_oatfinally.sol\":5762:6345  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"contracts/Copy_oatfinally.sol\":5793:5803  msg.sender */\n  caller\n    /* \"contracts/Copy_oatfinally.sol\":5786:5804  _noFee[msg.sender] */\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/Copy_oatfinally.sol\":5786:5792  _noFee */\n  0x02\n    /* \"contracts/Copy_oatfinally.sol\":5786:5804  _noFee[msg.sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/Copy_oatfinally.sol\":5786:5811  _noFee[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n    /* \"contracts/Copy_oatfinally.sol\":5807:5811  true */\n  0x01\n    /* \"contracts/Copy_oatfinally.sol\":5786:5811  _noFee[msg.sender] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/Copy_oatfinally.sol\":5836:5840  this */\n  address\n    /* \"contracts/Copy_oatfinally.sol\":5821:5842  _noFee[address(this)] */\n  dup6\n  mstore\n  dup3\n  dup6\n  keccak256\n    /* \"contracts/Copy_oatfinally.sol\":5821:5849  _noFee[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Copy_oatfinally.sol\":5860:5870  swapRouter */\n  0x07\n    /* \"contracts/Copy_oatfinally.sol\":5860:5926  swapRouter = IRouter02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Copy_oatfinally.sol\":5883:5925  0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D */\n  0x7a250d5630b4cf539739df2c5dacb4c659f2488d\n    /* \"contracts/Copy_oatfinally.sol\":5860:5926  swapRouter = IRouter02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D) */\n  or\n  swap1\n  sstore\n    /* \"contracts/Copy_oatfinally.sol\":5936:5955  balance[msg.sender] */\n  dup4\n  dup4\n  mstore\n    /* \"contracts/Copy_oatfinally.sol\":5936:5943  balance */\n  0x04\n    /* \"contracts/Copy_oatfinally.sol\":5936:5955  balance[msg.sender] */\n  dup3\n  mstore\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/Copy_oatfinally.sol\":5030:5050  100_000_000 * 10**18 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/Copy_oatfinally.sol\":5936:5970  balance[msg.sender] = _totalSupply */\n  swap1\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Copy_oatfinally.sol\":5985:6031  Transfer(address(0), msg.sender, _totalSupply) */\n  swap1\n  mload\n    /* \"#utility.yul\":160:185   */\n  swap1\n  dup2\n  mstore\n    /* \"contracts/Copy_oatfinally.sol\":5985:6031  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":133:151   */\n  add\n    /* \"contracts/Copy_oatfinally.sol\":5985:6031  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Copy_oatfinally.sol\":6062:6072  swapRouter */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Copy_oatfinally.sol\":6062:6080  swapRouter.factory */\n  and\n  0xc45a0155\n    /* \"contracts/Copy_oatfinally.sol\":6062:6082  swapRouter.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_13\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_13:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Copy_oatfinally.sol\":6051:6094  IFactoryV2(swapRouter.factory()).createPair */\n  and\n  0xc9c65396\n    /* \"contracts/Copy_oatfinally.sol\":6108:6118  swapRouter */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Copy_oatfinally.sol\":6108:6123  swapRouter.WETH */\n  and\n  0xad5c4648\n    /* \"contracts/Copy_oatfinally.sol\":6108:6125  swapRouter.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_17\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_17:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_18\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_18:\n    /* \"contracts/Copy_oatfinally.sol\":6051:6162  IFactoryV2(swapRouter.factory()).createPair(... */\n  mload(0x40)\n  not(sub(shl(0xe0, 0x01), 0x01))\n  0xe0\n  dup5\n  swap1\n  shl\n  and\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":721:736   */\n  swap1\n  swap2\n  and\n    /* \"contracts/Copy_oatfinally.sol\":6051:6162  IFactoryV2(swapRouter.factory()).createPair(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":703:737   */\n  mstore\n    /* \"contracts/Copy_oatfinally.sol\":6147:6151  this */\n  address\n    /* \"#utility.yul\":753:771   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":746:789   */\n  mstore\n    /* \"#utility.yul\":638:656   */\n  0x44\n  add\n    /* \"contracts/Copy_oatfinally.sol\":6051:6162  IFactoryV2(swapRouter.factory()).createPair(... */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_22\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_22:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_23\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"contracts/Copy_oatfinally.sol\":6042:6048  lpPair */\n  0x08\n    /* \"contracts/Copy_oatfinally.sol\":6042:6162  lpPair = IFactoryV2(swapRouter.factory()).createPair(... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n  0x00\n    /* \"contracts/Copy_oatfinally.sol\":6172:6188  isLpPair[lpPair] */\n  swap1\n  dup2\n  mstore\n    /* \"contracts/Copy_oatfinally.sol\":6172:6180  isLpPair */\n  0x03\n    /* \"contracts/Copy_oatfinally.sol\":6172:6188  isLpPair[lpPair] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/Copy_oatfinally.sol\":6172:6195  isLpPair[lpPair] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"contracts/Copy_oatfinally.sol\":6234:6244  swapRouter */\n  sload(0x07)\n    /* \"contracts/Copy_oatfinally.sol\":6205:6265  _approve(msg.sender, address(swapRouter), type(uint256).max) */\n  tag_24\n  swap2\n    /* \"contracts/Copy_oatfinally.sol\":6214:6224  msg.sender */\n  caller\n  swap2\n    /* \"contracts/Copy_oatfinally.sol\":6234:6244  swapRouter */\n  and\n  not(0x00)\n    /* \"contracts/Copy_oatfinally.sol\":6205:6213  _approve */\n  tag_25\n    /* \"contracts/Copy_oatfinally.sol\":6205:6265  _approve(msg.sender, address(swapRouter), type(uint256).max) */\n  jump\t// in\ntag_24:\n    /* \"contracts/Copy_oatfinally.sol\":6307:6317  swapRouter */\n  sload(0x07)\n    /* \"contracts/Copy_oatfinally.sol\":6275:6338  _approve(address(this), address(swapRouter), type(uint256).max) */\n  tag_26\n  swap1\n    /* \"contracts/Copy_oatfinally.sol\":6292:6296  this */\n  address\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Copy_oatfinally.sol\":6307:6317  swapRouter */\n  and\n  not(0x00)\n    /* \"contracts/Copy_oatfinally.sol\":6275:6283  _approve */\n  tag_25\n    /* \"contracts/Copy_oatfinally.sol\":6275:6338  _approve(address(this), address(swapRouter), type(uint256).max) */\n  jump\t// in\ntag_26:\n    /* \"contracts/Copy_oatfinally.sol\":3811:10175  contract OneAnonataTime is Context, Ownable, IERC20 {... */\n  jump(tag_36)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Copy_oatfinally.sol\":6774:7059  function _approve(... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Copy_oatfinally.sol\":6898:6918  sender != address(0) */\n  dup4\n  and\n    /* \"contracts/Copy_oatfinally.sol\":6890:6942  require(sender != address(0), \"ERC20: Zero Address\") */\n  tag_31\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1002:1004   */\n  0x20\n    /* \"contracts/Copy_oatfinally.sol\":6890:6942  require(sender != address(0), \"ERC20: Zero Address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":984:1005   */\n  mstore\n    /* \"#utility.yul\":1041:1043   */\n  0x13\n    /* \"#utility.yul\":1021:1039   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1014:1044   */\n  mstore\n  shl(0x68, 0x45524332303a205a65726f2041646472657373)\n    /* \"#utility.yul\":1060:1078   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1053:1102   */\n  mstore\n    /* \"#utility.yul\":1119:1137   */\n  0x64\n  add\n    /* \"contracts/Copy_oatfinally.sol\":6890:6942  require(sender != address(0), \"ERC20: Zero Address\") */\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Copy_oatfinally.sol\":6960:6981  spender != address(0) */\n  dup3\n  and\n    /* \"contracts/Copy_oatfinally.sol\":6952:7005  require(spender != address(0), \"ERC20: Zero Address\") */\n  tag_34\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1002:1004   */\n  0x20\n    /* \"contracts/Copy_oatfinally.sol\":6952:7005  require(spender != address(0), \"ERC20: Zero Address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":984:1005   */\n  mstore\n    /* \"#utility.yul\":1041:1043   */\n  0x13\n    /* \"#utility.yul\":1021:1039   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1014:1044   */\n  mstore\n  shl(0x68, 0x45524332303a205a65726f2041646472657373)\n    /* \"#utility.yul\":1060:1078   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1053:1102   */\n  mstore\n    /* \"#utility.yul\":1119:1137   */\n  0x64\n  add\n    /* \"contracts/Copy_oatfinally.sol\":6952:7005  require(spender != address(0), \"ERC20: Zero Address\") */\n  tag_32\n    /* \"#utility.yul\":800:1143   */\n  jump\n    /* \"contracts/Copy_oatfinally.sol\":6952:7005  require(spender != address(0), \"ERC20: Zero Address\") */\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Copy_oatfinally.sol\":7015:7034  _allowances[sender] */\n  swap3\n  dup4\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/Copy_oatfinally.sol\":7015:7026  _allowances */\n  0x01\n    /* \"contracts/Copy_oatfinally.sol\":7015:7034  _allowances[sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/Copy_oatfinally.sol\":7015:7043  _allowances[sender][spender] */\n  swap5\n  swap1\n  swap6\n  and\n  dup3\n  mstore\n  swap3\n  swap1\n  swap3\n  mstore\n  swap2\n  swap1\n  keccak256\n    /* \"contracts/Copy_oatfinally.sol\":7015:7052  _allowances[sender][spender] = amount */\n  sstore\n    /* \"contracts/Copy_oatfinally.sol\":6774:7059  function _approve(... */\n  jump\t// out\n    /* \"#utility.yul\":196:486   */\ntag_15:\n    /* \"#utility.yul\":266:272   */\n  0x00\n    /* \"#utility.yul\":319:321   */\n  0x20\n    /* \"#utility.yul\":307:316   */\n  dup3\n    /* \"#utility.yul\":298:305   */\n  dup5\n    /* \"#utility.yul\":294:317   */\n  sub\n    /* \"#utility.yul\":290:322   */\n  slt\n    /* \"#utility.yul\":287:339   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":335:336   */\n  0x00\n    /* \"#utility.yul\":332:333   */\n  dup1\n    /* \"#utility.yul\":325:337   */\n  revert\n    /* \"#utility.yul\":287:339   */\ntag_39:\n    /* \"#utility.yul\":361:377   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":406:437   */\n  dup2\n  and\n    /* \"#utility.yul\":396:438   */\n  dup2\n  eq\n    /* \"#utility.yul\":386:456   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":452:453   */\n  0x00\n    /* \"#utility.yul\":449:450   */\n  dup1\n    /* \"#utility.yul\":442:454   */\n  revert\n    /* \"#utility.yul\":386:456   */\ntag_40:\n    /* \"#utility.yul\":475:480   */\n  swap4\n    /* \"#utility.yul\":196:486   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":800:1143   */\ntag_36:\n    /* \"contracts/Copy_oatfinally.sol\":3811:10175  contract OneAnonataTime is Context, Ownable, IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Copy_oatfinally.sol\":3811:10175  contract OneAnonataTime is Context, Ownable, IERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdc9d75b0\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe9451f5f\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa01c3483\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x27889862\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x27889862\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x452ed4f1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x694e80c3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x0445b667\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Copy_oatfinally.sol\":5056:5093  uint256 public swapThreshold = 30_000 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      sload(0x05)\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Copy_oatfinally.sol\":5056:5093  uint256 public swapThreshold = 30_000 */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Copy_oatfinally.sol\":4288:4372  function name() external pure  returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":4360:4365  _name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x08\n      dup2\n      mstore\n      shl(0xc1, 0x27b7329020b737b7)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":4288:4372  function name() external pure  returns (string memory) {... */\n    tag_36:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/Copy_oatfinally.sol\":6582:6768  function approve(address spender, uint256 amount)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":1370:1384   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1363:1385   */\n      iszero\n        /* \"#utility.yul\":1345:1386   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"contracts/Copy_oatfinally.sol\":6582:6768  function approve(address spender, uint256 amount)... */\n      tag_33\n        /* \"#utility.yul\":1205:1392   */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":3869:4034  function totalSupply() external pure override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":5030:5050  100_000_000 * 10**18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Copy_oatfinally.sol\":3869:4034  function totalSupply() external pure override returns (uint256) {... */\n      jump(tag_31)\n        /* \"contracts/Copy_oatfinally.sol\":7065:7395  function transferFrom(... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_41\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"contracts/Copy_oatfinally.sol\":7401:7509  function isNoFeeWallet(address account) external view returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_41\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":7487:7502  _noFee[account] */\n      and\n        /* \"contracts/Copy_oatfinally.sol\":7464:7468  bool */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":7487:7502  _noFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":7487:7493  _noFee */\n      0x02\n        /* \"contracts/Copy_oatfinally.sol\":7487:7502  _noFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":7401:7509  function isNoFeeWallet(address account) external view returns (bool) {... */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":4040:4188  function decimals() external pure returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      mload(0x40)\n        /* \"contracts/Copy_oatfinally.sol\":5471:5473  18 */\n      0x12\n        /* \"#utility.yul\":2252:2288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2240:2242   */\n      0x20\n        /* \"#utility.yul\":2225:2243   */\n      add\n        /* \"contracts/Copy_oatfinally.sol\":4040:4188  function decimals() external pure returns (uint8) {... */\n      tag_33\n        /* \"#utility.yul\":2110:2294   */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":4991:5050  uint256 public constant _totalSupply = 100_000_000 * 10**18 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_31\n        /* \"contracts/Copy_oatfinally.sol\":5030:5050  100_000_000 * 10**18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Copy_oatfinally.sol\":4991:5050  uint256 public constant _totalSupply = 100_000_000 * 10**18 */\n      dup2\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":5573:5594  address public lpPair */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      sload(0x08)\n      tag_73\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_73:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2463:2495   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2445:2496   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2433:2435   */\n      0x20\n        /* \"#utility.yul\":2418:2436   */\n      add\n        /* \"contracts/Copy_oatfinally.sol\":5573:5594  address public lpPair */\n      tag_33\n        /* \"#utility.yul\":2299:2502   */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":9968:10173  function changeThreshold(uint256 amount) external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/Copy_oatfinally.sol\":4655:4770  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_31\n      tag_84\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":4747:4763  balance[account] */\n      and\n        /* \"contracts/Copy_oatfinally.sol\":4721:4728  uint256 */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":4747:4763  balance[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":4747:4754  balance */\n      0x04\n        /* \"contracts/Copy_oatfinally.sol\":4747:4763  balance[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":4655:4770  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_78\n      tag_89\n      jump\t// in\n        /* \"contracts/Copy_oatfinally.sol\":4378:4462  function getOwner() external view  returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":4422:4429  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Copy_oatfinally.sol\":4378:4462  function getOwner() external view  returns (address) {... */\n      jump(tag_73)\n        /* \"contracts/Copy_oatfinally.sol\":4194:4282  function symbol() external pure  returns (string memory) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":4268:4275  _symbol */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x04\n      dup2\n      mstore\n      shl(0xe2, 0x0913d055)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":4194:4282  function symbol() external pure  returns (string memory) {... */\n      jump(tag_36)\n        /* \"contracts/Copy_oatfinally.sol\":5479:5567  address public constant DEAD_WALLET =... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_73\n        /* \"contracts/Copy_oatfinally.sol\":5525:5567  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/Copy_oatfinally.sol\":5479:5567  address public constant DEAD_WALLET =... */\n      dup2\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":6386:6576  function transfer(address recipient, uint256 amount)... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_41\n      tag_108\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"contracts/Copy_oatfinally.sol\":5295:5322  IRouter02 public swapRouter */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      sload(0x07)\n      tag_73\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":5140:5185  uint256 public constant fee_denominator = 100 */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_31\n        /* \"contracts/Copy_oatfinally.sol\":5182:5185  100 */\n      0x64\n        /* \"contracts/Copy_oatfinally.sol\":5140:5185  uint256 public constant fee_denominator = 100 */\n      dup2\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":4468:4649  function allowance(address holder, address spender)... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_31\n      tag_122\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":4614:4633  _allowances[holder] */\n      swap2\n      dup3\n      and\n        /* \"contracts/Copy_oatfinally.sol\":4584:4591  uint256 */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":4614:4633  _allowances[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":4614:4625  _allowances */\n      0x01\n        /* \"contracts/Copy_oatfinally.sol\":4614:4633  _allowances[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":4614:4642  _allowances[holder][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":4468:4649  function allowance(address holder, address spender)... */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":5099:5134  uint256 public constant sellfee = 2 */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_31\n        /* \"contracts/Copy_oatfinally.sol\":5133:5134  2 */\n      0x02\n        /* \"contracts/Copy_oatfinally.sol\":5099:5134  uint256 public constant sellfee = 2 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_78\n      tag_132\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/Copy_oatfinally.sol\":6582:6768  function approve(address spender, uint256 amount)... */\n    tag_44:\n        /* \"contracts/Copy_oatfinally.sol\":6683:6687  bool */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":6703:6740  _approve(msg.sender, spender, amount) */\n      tag_136\n        /* \"contracts/Copy_oatfinally.sol\":6712:6722  msg.sender */\n      caller\n        /* \"contracts/Copy_oatfinally.sol\":6724:6731  spender */\n      dup5\n        /* \"contracts/Copy_oatfinally.sol\":6733:6739  amount */\n      dup5\n        /* \"contracts/Copy_oatfinally.sol\":6703:6711  _approve */\n      tag_137\n        /* \"contracts/Copy_oatfinally.sol\":6703:6740  _approve(msg.sender, spender, amount) */\n      jump\t// in\n    tag_136:\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":6757:6761  true */\n      0x01\n        /* \"contracts/Copy_oatfinally.sol\":6582:6768  function approve(address spender, uint256 amount)... */\n    tag_135:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Copy_oatfinally.sol\":7065:7395  function transferFrom(... */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":7215:7234  _allowances[sender] */\n      dup4\n      and\n        /* \"contracts/Copy_oatfinally.sol\":7195:7199  bool */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":7215:7234  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":7215:7226  _allowances */\n      0x01\n        /* \"contracts/Copy_oatfinally.sol\":7215:7234  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":7235:7245  msg.sender */\n      caller\n        /* \"contracts/Copy_oatfinally.sol\":7215:7246  _allowances[sender][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/Copy_oatfinally.sol\":7215:7267  _allowances[sender][msg.sender] != type(uint256).max */\n      eq\n        /* \"contracts/Copy_oatfinally.sol\":7211:7335  if (_allowances[sender][msg.sender] != type(uint256).max) {... */\n      tag_141\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":7283:7302  _allowances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":7283:7294  _allowances */\n      0x01\n        /* \"contracts/Copy_oatfinally.sol\":7283:7302  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":7303:7313  msg.sender */\n      caller\n        /* \"contracts/Copy_oatfinally.sol\":7283:7314  _allowances[sender][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":7283:7324  _allowances[sender][msg.sender] -= amount */\n      dup1\n      sload\n        /* \"contracts/Copy_oatfinally.sol\":7318:7324  amount */\n      dup5\n      swap3\n        /* \"contracts/Copy_oatfinally.sol\":7283:7302  _allowances[sender] */\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":7283:7324  _allowances[sender][msg.sender] -= amount */\n      tag_142\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":7318:7324  amount */\n      dup5\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":7283:7324  _allowances[sender][msg.sender] -= amount */\n      tag_143\n      jump\t// in\n    tag_142:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":7211:7335  if (_allowances[sender][msg.sender] != type(uint256).max) {... */\n    tag_141:\n        /* \"contracts/Copy_oatfinally.sol\":7352:7388  _transfer(sender, recipient, amount) */\n      tag_144\n        /* \"contracts/Copy_oatfinally.sol\":7362:7368  sender */\n      dup5\n        /* \"contracts/Copy_oatfinally.sol\":7370:7379  recipient */\n      dup5\n        /* \"contracts/Copy_oatfinally.sol\":7381:7387  amount */\n      dup5\n        /* \"contracts/Copy_oatfinally.sol\":7352:7361  _transfer */\n      tag_145\n        /* \"contracts/Copy_oatfinally.sol\":7352:7388  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/Copy_oatfinally.sol\":7345:7388  return _transfer(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":7065:7395  function transferFrom(... */\n    tag_140:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Copy_oatfinally.sol\":9968:10173  function changeThreshold(uint256 amount) external onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/Copy_oatfinally.sol\":10056:10059  100 */\n      0x64\n        /* \"contracts/Copy_oatfinally.sol\":10046:10052  amount */\n      dup2\n        /* \"contracts/Copy_oatfinally.sol\":10046:10059  amount >= 100 */\n      lt\n      iszero\n        /* \"contracts/Copy_oatfinally.sol\":10038:10090  require(amount >= 100, \"Amount lower not accepted.\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3778:3780   */\n      0x20\n        /* \"contracts/Copy_oatfinally.sol\":10038:10090  require(amount >= 100, \"Amount lower not accepted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3760:3781   */\n      mstore\n        /* \"#utility.yul\":3817:3819   */\n      0x1a\n        /* \"#utility.yul\":3797:3815   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3790:3820   */\n      mstore\n        /* \"#utility.yul\":3856:3884   */\n      0x416d6f756e74206c6f776572206e6f742061636365707465642e000000000000\n        /* \"#utility.yul\":3836:3854   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3829:3885   */\n      mstore\n        /* \"#utility.yul\":3902:3920   */\n      0x64\n      add\n        /* \"contracts/Copy_oatfinally.sol\":10038:10090  require(amount >= 100, \"Amount lower not accepted.\") */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/Copy_oatfinally.sol\":10100:10113  swapThreshold */\n      0x05\n        /* \"contracts/Copy_oatfinally.sol\":10100:10122  swapThreshold = amount */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Copy_oatfinally.sol\":10137:10166  updateThresold(swapThreshold) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":10137:10166  updateThresold(swapThreshold) */\n      0x2b7ce9cd4278161eef9245955c9a851618488a07e830194c60a88f0224ad3cc0\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Copy_oatfinally.sol\":10137:10166  updateThresold(swapThreshold) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Copy_oatfinally.sol\":9968:10173  function changeThreshold(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Copy_oatfinally.sol\":6386:6576  function transfer(address recipient, uint256 amount)... */\n    tag_109:\n        /* \"contracts/Copy_oatfinally.sol\":6488:6492  bool */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":6508:6548  _transfer(msg.sender, recipient, amount) */\n      tag_168\n        /* \"contracts/Copy_oatfinally.sol\":6518:6528  msg.sender */\n      caller\n        /* \"contracts/Copy_oatfinally.sol\":6530:6539  recipient */\n      dup5\n        /* \"contracts/Copy_oatfinally.sol\":6541:6547  amount */\n      dup5\n        /* \"contracts/Copy_oatfinally.sol\":6508:6517  _transfer */\n      tag_145\n        /* \"contracts/Copy_oatfinally.sol\":6508:6548  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_168:\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":6565:6569  true */\n      0x01\n      swap4\n        /* \"contracts/Copy_oatfinally.sol\":6386:6576  function transfer(address recipient, uint256 amount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4133:4135   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4115:4136   */\n      mstore\n        /* \"#utility.yul\":4172:4174   */\n      0x26\n        /* \"#utility.yul\":4152:4170   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4145:4175   */\n      mstore\n        /* \"#utility.yul\":4211:4245   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4191:4209   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4184:4246   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4262:4280   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4255:4291   */\n      mstore\n        /* \"#utility.yul\":4308:4327   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_154\n        /* \"#utility.yul\":3931:4333   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Copy_oatfinally.sol\":6774:7059  function _approve(... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":6898:6918  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/Copy_oatfinally.sol\":6890:6942  require(sender != address(0), \"ERC20: Zero Address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4540:4542   */\n      0x20\n        /* \"contracts/Copy_oatfinally.sol\":6890:6942  require(sender != address(0), \"ERC20: Zero Address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4522:4543   */\n      mstore\n        /* \"#utility.yul\":4579:4581   */\n      0x13\n        /* \"#utility.yul\":4559:4577   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4552:4582   */\n      mstore\n      shl(0x68, 0x45524332303a205a65726f2041646472657373)\n        /* \"#utility.yul\":4598:4616   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4591:4640   */\n      mstore\n        /* \"#utility.yul\":4657:4675   */\n      0x64\n      add\n        /* \"contracts/Copy_oatfinally.sol\":6890:6942  require(sender != address(0), \"ERC20: Zero Address\") */\n      tag_154\n        /* \"#utility.yul\":4338:4681   */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":6890:6942  require(sender != address(0), \"ERC20: Zero Address\") */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":6960:6981  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/Copy_oatfinally.sol\":6952:7005  require(spender != address(0), \"ERC20: Zero Address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4540:4542   */\n      0x20\n        /* \"contracts/Copy_oatfinally.sol\":6952:7005  require(spender != address(0), \"ERC20: Zero Address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4522:4543   */\n      mstore\n        /* \"#utility.yul\":4579:4581   */\n      0x13\n        /* \"#utility.yul\":4559:4577   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4552:4582   */\n      mstore\n      shl(0x68, 0x45524332303a205a65726f2041646472657373)\n        /* \"#utility.yul\":4598:4616   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4591:4640   */\n      mstore\n        /* \"#utility.yul\":4657:4675   */\n      0x64\n      add\n        /* \"contracts/Copy_oatfinally.sol\":6952:7005  require(spender != address(0), \"ERC20: Zero Address\") */\n      tag_154\n        /* \"#utility.yul\":4338:4681   */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":6952:7005  require(spender != address(0), \"ERC20: Zero Address\") */\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":7015:7034  _allowances[sender] */\n      swap3\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":7015:7026  _allowances */\n      0x01\n        /* \"contracts/Copy_oatfinally.sol\":7015:7034  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":7015:7043  _allowances[sender][spender] */\n      swap5\n      swap1\n      swap6\n      and\n      dup3\n      mstore\n      swap3\n      swap1\n      swap3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":7015:7052  _allowances[sender][spender] = amount */\n      sstore\n        /* \"contracts/Copy_oatfinally.sol\":6774:7059  function _approve(... */\n      jump\t// out\n        /* \"contracts/Copy_oatfinally.sol\":7682:8653  function _transfer(... */\n    tag_145:\n        /* \"contracts/Copy_oatfinally.sol\":7791:7795  bool */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":7822:7826  true */\n      0x01\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":7844:7860  to != address(0) */\n      dup5\n      and\n        /* \"contracts/Copy_oatfinally.sol\":7836:7900  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4888:4890   */\n      0x20\n        /* \"contracts/Copy_oatfinally.sol\":7836:7900  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4870:4891   */\n      mstore\n        /* \"#utility.yul\":4927:4929   */\n      0x23\n        /* \"#utility.yul\":4907:4925   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4900:4930   */\n      mstore\n        /* \"#utility.yul\":4966:5000   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":4946:4964   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4939:5001   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5017:5035   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5010:5043   */\n      mstore\n        /* \"#utility.yul\":5060:5079   */\n      0x84\n      add\n        /* \"contracts/Copy_oatfinally.sol\":7836:7900  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_154\n        /* \"#utility.yul\":4686:5085   */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":7836:7900  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":7918:7936  from != address(0) */\n      dup6\n      and\n        /* \"contracts/Copy_oatfinally.sol\":7910:7978  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5292:5294   */\n      0x20\n        /* \"contracts/Copy_oatfinally.sol\":7910:7978  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5274:5295   */\n      mstore\n        /* \"#utility.yul\":5331:5333   */\n      0x25\n        /* \"#utility.yul\":5311:5329   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5304:5334   */\n      mstore\n        /* \"#utility.yul\":5370:5404   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5350:5368   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5343:5405   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5421:5439   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5414:5449   */\n      mstore\n        /* \"#utility.yul\":5466:5485   */\n      0x84\n      add\n        /* \"contracts/Copy_oatfinally.sol\":7910:7978  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_154\n        /* \"#utility.yul\":5090:5491   */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":7910:7978  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_187:\n        /* \"contracts/Copy_oatfinally.sol\":8005:8006  0 */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":7996:8002  amount */\n      dup4\n        /* \"contracts/Copy_oatfinally.sol\":7996:8006  amount > 0 */\n      gt\n        /* \"contracts/Copy_oatfinally.sol\":7988:8052  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5698:5700   */\n      0x20\n        /* \"contracts/Copy_oatfinally.sol\":7988:8052  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5680:5701   */\n      mstore\n        /* \"#utility.yul\":5737:5739   */\n      0x29\n        /* \"#utility.yul\":5717:5735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5710:5740   */\n      mstore\n        /* \"#utility.yul\":5776:5810   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":5756:5774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5749:5811   */\n      mstore\n      shl(0xb8, 0x7468616e207a65726f)\n        /* \"#utility.yul\":5827:5845   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5820:5859   */\n      mstore\n        /* \"#utility.yul\":5876:5895   */\n      0x84\n      add\n        /* \"contracts/Copy_oatfinally.sol\":7988:8052  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_154\n        /* \"#utility.yul\":5496:5901   */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":7988:8052  require(amount > 0, \"Transfer amount must be greater than zero\") */\n    tag_190:\n        /* \"contracts/Copy_oatfinally.sol\":8067:8084  is_sell(from, to) */\n      tag_193\n        /* \"contracts/Copy_oatfinally.sol\":8075:8079  from */\n      dup6\n        /* \"contracts/Copy_oatfinally.sol\":8081:8083  to */\n      dup6\n        /* \"contracts/Copy_oatfinally.sol\":8067:8074  is_sell */\n      tag_194\n        /* \"contracts/Copy_oatfinally.sol\":8067:8084  is_sell(from, to) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/Copy_oatfinally.sol\":8067:8095  is_sell(from, to) && !inSwap */\n      dup1\n      iszero\n      tag_195\n      jumpi\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":8089:8095  inSwap */\n      sload(0x08)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Copy_oatfinally.sol\":8088:8095  !inSwap */\n      iszero\n        /* \"contracts/Copy_oatfinally.sol\":8067:8095  is_sell(from, to) && !inSwap */\n    tag_195:\n        /* \"contracts/Copy_oatfinally.sol\":8063:8300  if (is_sell(from, to) && !inSwap) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"contracts/Copy_oatfinally.sol\":8160:8164  this */\n      address\n        /* \"contracts/Copy_oatfinally.sol\":8111:8139  uint256 contractTokenBalance */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":4747:4763  balance[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":4747:4754  balance */\n      0x04\n        /* \"contracts/Copy_oatfinally.sol\":4747:4763  balance[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Copy_oatfinally.sol\":8208:8221  swapThreshold */\n      sload(0x05)\n        /* \"contracts/Copy_oatfinally.sol\":8184:8221  contractTokenBalance >= swapThreshold */\n      dup2\n      lt\n        /* \"contracts/Copy_oatfinally.sol\":8180:8290  if (contractTokenBalance >= swapThreshold) {... */\n      tag_199\n      jumpi\n        /* \"contracts/Copy_oatfinally.sol\":8241:8275  internalSwap(contractTokenBalance) */\n      tag_199\n        /* \"contracts/Copy_oatfinally.sol\":8254:8274  contractTokenBalance */\n      dup2\n        /* \"contracts/Copy_oatfinally.sol\":8241:8253  internalSwap */\n      tag_200\n        /* \"contracts/Copy_oatfinally.sol\":8241:8275  internalSwap(contractTokenBalance) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/Copy_oatfinally.sol\":8097:8300  {... */\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":8063:8300  if (is_sell(from, to) && !inSwap) {... */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":8314:8326  _noFee[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":8314:8320  _noFee */\n      0x02\n        /* \"contracts/Copy_oatfinally.sol\":8314:8326  _noFee[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/Copy_oatfinally.sol\":8314:8340  _noFee[from] || _noFee[to] */\n      tag_201\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":8330:8340  _noFee[to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":8330:8336  _noFee */\n      0x02\n        /* \"contracts/Copy_oatfinally.sol\":8330:8340  _noFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Copy_oatfinally.sol\":8314:8340  _noFee[from] || _noFee[to] */\n    tag_201:\n        /* \"contracts/Copy_oatfinally.sol\":8310:8382  if (_noFee[from] || _noFee[to]) {... */\n      iszero\n      tag_202\n      jumpi\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":8366:8371  false */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":8310:8382  if (_noFee[from] || _noFee[to]) {... */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":8391:8404  balance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":8391:8398  balance */\n      0x04\n        /* \"contracts/Copy_oatfinally.sol\":8391:8404  balance[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":8391:8414  balance[from] -= amount */\n      dup1\n      sload\n        /* \"contracts/Copy_oatfinally.sol\":8408:8414  amount */\n      dup6\n      swap3\n        /* \"contracts/Copy_oatfinally.sol\":8391:8404  balance[from] */\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":8391:8414  balance[from] -= amount */\n      tag_203\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":8408:8414  amount */\n      dup5\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":8391:8414  balance[from] -= amount */\n      tag_143\n      jump\t// in\n    tag_203:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":8424:8446  uint256 amountAfterFee */\n      0x00\n      swap1\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":8450:8457  takeFee */\n      dup2\n        /* \"contracts/Copy_oatfinally.sol\":8449:8536  (takeFee)... */\n      tag_204\n      jumpi\n        /* \"contracts/Copy_oatfinally.sol\":8530:8536  amount */\n      dup4\n        /* \"contracts/Copy_oatfinally.sol\":8449:8536  (takeFee)... */\n      jump(tag_206)\n    tag_204:\n        /* \"contracts/Copy_oatfinally.sol\":8473:8515  takeTaxes(from, is_sell(from, to), amount) */\n      tag_206\n        /* \"contracts/Copy_oatfinally.sol\":8483:8487  from */\n      dup7\n        /* \"contracts/Copy_oatfinally.sol\":8489:8506  is_sell(from, to) */\n      tag_207\n        /* \"contracts/Copy_oatfinally.sol\":8497:8501  from */\n      dup9\n        /* \"contracts/Copy_oatfinally.sol\":8503:8505  to */\n      dup9\n        /* \"contracts/Copy_oatfinally.sol\":8489:8496  is_sell */\n      tag_194\n        /* \"contracts/Copy_oatfinally.sol\":8489:8506  is_sell(from, to) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/Copy_oatfinally.sol\":8508:8514  amount */\n      dup7\n        /* \"contracts/Copy_oatfinally.sol\":8473:8482  takeTaxes */\n      tag_208\n        /* \"contracts/Copy_oatfinally.sol\":8473:8515  takeTaxes(from, is_sell(from, to), amount) */\n      jump\t// in\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":8546:8557  balance[to] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":8546:8553  balance */\n      0x04\n        /* \"contracts/Copy_oatfinally.sol\":8546:8557  balance[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":8546:8575  balance[to] += amountAfterFee */\n      dup1\n      sload\n        /* \"contracts/Copy_oatfinally.sol\":8424:8536  uint256 amountAfterFee = (takeFee)... */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"contracts/Copy_oatfinally.sol\":8546:8557  balance[to] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":8546:8575  balance[to] += amountAfterFee */\n      tag_209\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":8424:8536  uint256 amountAfterFee = (takeFee)... */\n      dup5\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":8546:8575  balance[to] += amountAfterFee */\n      tag_210\n      jump\t// in\n    tag_209:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":8605:8607  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":8590:8624  Transfer(from, to, amountAfterFee) */\n      and\n        /* \"contracts/Copy_oatfinally.sol\":8599:8603  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":8590:8624  Transfer(from, to, amountAfterFee) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Copy_oatfinally.sol\":8609:8623  amountAfterFee */\n      dup4\n        /* \"contracts/Copy_oatfinally.sol\":8590:8624  Transfer(from, to, amountAfterFee) */\n      mload(0x40)\n      tag_211\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/Copy_oatfinally.sol\":8590:8624  Transfer(from, to, amountAfterFee) */\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":8642:8646  true */\n      0x01\n      swap6\n        /* \"contracts/Copy_oatfinally.sol\":7682:8653  function _transfer(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6238:6240   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6220:6241   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6257:6275   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6250:6280   */\n      mstore\n        /* \"#utility.yul\":6316:6350   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6296:6314   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6289:6351   */\n      mstore\n        /* \"#utility.yul\":6368:6386   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_154\n        /* \"#utility.yul\":6036:6392   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Copy_oatfinally.sol\":7515:7676  function is_sell(address ins, address out) internal view returns (bool) {... */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":7613:7626  isLpPair[out] */\n      dup2\n      and\n        /* \"contracts/Copy_oatfinally.sol\":7581:7585  bool */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":7613:7626  isLpPair[out] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":7613:7621  isLpPair */\n      0x03\n        /* \"contracts/Copy_oatfinally.sol\":7613:7626  isLpPair[out] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Copy_oatfinally.sol\":7581:7585  bool */\n      dup2\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":7613:7626  isLpPair[out] */\n      0xff\n      and\n        /* \"contracts/Copy_oatfinally.sol\":7613:7644  isLpPair[out] && !isLpPair[ins] */\n      dup1\n      iszero\n      tag_221\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":7631:7644  isLpPair[ins] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":7631:7639  isLpPair */\n      0x03\n        /* \"contracts/Copy_oatfinally.sol\":7631:7644  isLpPair[ins] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Copy_oatfinally.sol\":7630:7644  !isLpPair[ins] */\n      iszero\n        /* \"contracts/Copy_oatfinally.sol\":7613:7644  isLpPair[out] && !isLpPair[ins] */\n    tag_221:\n        /* \"contracts/Copy_oatfinally.sol\":7597:7644  bool _is_sell = isLpPair[out] && !isLpPair[ins] */\n      swap5\n        /* \"contracts/Copy_oatfinally.sol\":7515:7676  function is_sell(address ins, address out) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Copy_oatfinally.sol\":9133:9962  function internalSwap(uint256 contractTokenBalance) internal inSwapFlag {... */\n    tag_200:\n        /* \"contracts/Copy_oatfinally.sol\":5658:5664  inSwap */\n      0x08\n        /* \"contracts/Copy_oatfinally.sol\":5658:5671  inSwap = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/Copy_oatfinally.sol\":9239:9255  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Copy_oatfinally.sol\":9253:9254  2 */\n      0x02\n        /* \"contracts/Copy_oatfinally.sol\":9239:9255  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n      0x00\n      swap3\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":9215:9255  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":9283:9287  this */\n      address\n        /* \"contracts/Copy_oatfinally.sol\":9265:9269  path */\n      dup2\n        /* \"contracts/Copy_oatfinally.sol\":9270:9271  0 */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":9265:9272  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_229\n      tag_230\n      jump\t// in\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":9265:9288  path[0] = address(this) */\n      swap3\n      dup4\n      and\n        /* \"contracts/Copy_oatfinally.sol\":9265:9272  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"contracts/Copy_oatfinally.sol\":9265:9288  path[0] = address(this) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":9308:9318  swapRouter */\n      sload(0x07)\n        /* \"contracts/Copy_oatfinally.sol\":9308:9325  swapRouter.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Copy_oatfinally.sol\":9308:9318  swapRouter */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts/Copy_oatfinally.sol\":9308:9323  swapRouter.WETH */\n      0xad5c4648\n      swap3\n        /* \"contracts/Copy_oatfinally.sol\":9308:9325  swapRouter.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/Copy_oatfinally.sol\":9265:9272  path[0] */\n      swap2\n      swap3\n        /* \"contracts/Copy_oatfinally.sol\":9308:9325  swapRouter.WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Copy_oatfinally.sol\":9308:9318  swapRouter */\n      dup7\n        /* \"contracts/Copy_oatfinally.sol\":9308:9325  swapRouter.WETH() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"contracts/Copy_oatfinally.sol\":9298:9302  path */\n      dup2\n        /* \"contracts/Copy_oatfinally.sol\":9303:9304  1 */\n      0x01\n        /* \"contracts/Copy_oatfinally.sol\":9298:9305  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_236\n      tag_230\n      jump\t// in\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":9298:9325  path[1] = swapRouter.WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/Copy_oatfinally.sol\":9298:9305  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"contracts/Copy_oatfinally.sol\":9298:9325  path[1] = swapRouter.WETH() */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":9373:9377  this */\n      address\n        /* \"contracts/Copy_oatfinally.sol\":9353:9379  _allowances[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":9353:9364  _allowances */\n      0x01\n        /* \"contracts/Copy_oatfinally.sol\":9353:9379  _allowances[address(this)] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":9388:9398  swapRouter */\n      sload(0x07)\n      swap1\n      swap5\n      and\n        /* \"contracts/Copy_oatfinally.sol\":9353:9400  _allowances[address(this)][address(swapRouter)] */\n      dup3\n      mstore\n      swap3\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/Copy_oatfinally.sol\":9353:9421  _allowances[address(this)][address(swapRouter)] != type(uint256).max */\n      eq\n        /* \"contracts/Copy_oatfinally.sol\":9336:9524  if (... */\n      tag_237\n      jumpi\n        /* \"contracts/Copy_oatfinally.sol\":9466:9470  this */\n      address\n        /* \"contracts/Copy_oatfinally.sol\":9446:9472  _allowances[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":9446:9457  _allowances */\n      0x01\n        /* \"contracts/Copy_oatfinally.sol\":9446:9472  _allowances[address(this)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":9481:9491  swapRouter */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/Copy_oatfinally.sol\":9446:9493  _allowances[address(this)][address(swapRouter)] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      not(0x00)\n        /* \"contracts/Copy_oatfinally.sol\":9446:9513  _allowances[address(this)][address(swapRouter)] = type(uint256).max */\n      swap1\n      sstore\n        /* \"contracts/Copy_oatfinally.sol\":9336:9524  if (... */\n    tag_237:\n        /* \"contracts/Copy_oatfinally.sol\":9550:9560  swapRouter */\n      sload(0x07)\n        /* \"contracts/Copy_oatfinally.sol\":9550:9768  swapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      shl(0xe0, 0x791ac947)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":9550:9560  swapRouter */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9550:9611  swapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9550:9768  swapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      tag_238\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9629:9649  contractTokenBalance */\n      dup6\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9550:9560  swapRouter */\n      0x00\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9686:9690  path */\n      dup7\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9716:9720  this */\n      address\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9739:9754  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9550:9768  swapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      0x04\n      add\n      tag_239\n      jump\t// in\n    tag_238:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_241\n      jumpi\n      pop\n      0x01\n    tag_241:\n        /* \"contracts/Copy_oatfinally.sol\":9534:9817  try... */\n      tag_242\n      jumpi\n        /* \"contracts/Copy_oatfinally.sol\":9800:9807  return; */\n      pop\n      jump(tag_223)\n        /* \"contracts/Copy_oatfinally.sol\":9534:9817  try... */\n    tag_242:\n        /* \"contracts/Copy_oatfinally.sol\":9826:9838  bool success */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":9853:9874  address(this).balance */\n      selfbalance\n        /* \"contracts/Copy_oatfinally.sol\":9853:9878  address(this).balance > 0 */\n      iszero\n        /* \"contracts/Copy_oatfinally.sol\":9849:9955  if (address(this).balance > 0)... */\n      tag_247\n      jumpi\n        /* \"contracts/Copy_oatfinally.sol\":9906:9916  oatAddress */\n      sload(0x06)\n        /* \"contracts/Copy_oatfinally.sol\":9906:9955  oatAddress.call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":9906:9916  oatAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9929:9950  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9906:9955  oatAddress.call{value: address(this).balance}(\"\") */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/Copy_oatfinally.sol\":9929:9950  address(this).balance */\n      dup6\n        /* \"contracts/Copy_oatfinally.sol\":9906:9916  oatAddress */\n      dup8\n        /* \"contracts/Copy_oatfinally.sol\":9906:9955  oatAddress.call{value: address(this).balance}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_252\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_251)\n    tag_252:\n      0x60\n      swap2\n      pop\n    tag_251:\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":9892:9955  (success, ) = oatAddress.call{value: address(this).balance}(\"\") */\n      swap1\n      swap2\n      pop\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":9849:9955  if (address(this).balance > 0)... */\n    tag_247:\n        /* \"contracts/Copy_oatfinally.sol\":9205:9962  {... */\n      pop\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":5681:5682  _ */\n    tag_223:\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":5692:5698  inSwap */\n      0x08\n        /* \"contracts/Copy_oatfinally.sol\":5692:5706  inSwap = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"contracts/Copy_oatfinally.sol\":9133:9962  function internalSwap(uint256 contractTokenBalance) internal inSwapFlag {... */\n      jump\t// out\n        /* \"contracts/Copy_oatfinally.sol\":8659:9127  function takeTaxes(... */\n    tag_208:\n        /* \"contracts/Copy_oatfinally.sol\":8769:8776  uint256 */\n      0x00\n      dup1\n        /* \"contracts/Copy_oatfinally.sol\":8813:8838  if (issell) fee = sellfee */\n      dup4\n      iszero\n      tag_254\n      jumpi\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":5133:5134  2 */\n      0x02\n        /* \"contracts/Copy_oatfinally.sol\":8813:8838  if (issell) fee = sellfee */\n    tag_254:\n        /* \"contracts/Copy_oatfinally.sol\":8852:8855  fee */\n      dup1\n        /* \"contracts/Copy_oatfinally.sol\":8859:8860  0 */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":8852:8860  fee == 0 */\n      sub\n        /* \"contracts/Copy_oatfinally.sol\":8848:8875  if (fee == 0) return amount */\n      tag_255\n      jumpi\n        /* \"contracts/Copy_oatfinally.sol\":8869:8875  amount */\n      dup3\n        /* \"contracts/Copy_oatfinally.sol\":8862:8875  return amount */\n      swap2\n      pop\n      pop\n      jump(tag_140)\n        /* \"contracts/Copy_oatfinally.sol\":8848:8875  if (fee == 0) return amount */\n    tag_255:\n        /* \"contracts/Copy_oatfinally.sol\":8886:8903  uint256 feeAmount */\n      0x00\n        /* \"contracts/Copy_oatfinally.sol\":5182:5185  100 */\n      0x64\n        /* \"contracts/Copy_oatfinally.sol\":8907:8919  amount * fee */\n      tag_256\n        /* \"contracts/Copy_oatfinally.sol\":8916:8919  fee */\n      dup4\n        /* \"contracts/Copy_oatfinally.sol\":8907:8913  amount */\n      dup7\n        /* \"contracts/Copy_oatfinally.sol\":8907:8919  amount * fee */\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"contracts/Copy_oatfinally.sol\":8906:8938  (amount * fee) / fee_denominator */\n      tag_258\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"contracts/Copy_oatfinally.sol\":8886:8938  uint256 feeAmount = (amount * fee) / fee_denominator */\n      swap1\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":8952:8965  feeAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/Copy_oatfinally.sol\":8948:9086  if (feeAmount > 0) {... */\n      tag_260\n      jumpi\n        /* \"contracts/Copy_oatfinally.sol\":8997:9001  this */\n      address\n        /* \"contracts/Copy_oatfinally.sol\":8981:9003  balance[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":8981:8988  balance */\n      0x04\n        /* \"contracts/Copy_oatfinally.sol\":8981:9003  balance[address(this)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Copy_oatfinally.sol\":8981:9016  balance[address(this)] += feeAmount */\n      dup1\n      sload\n        /* \"contracts/Copy_oatfinally.sol\":9007:9016  feeAmount */\n      dup4\n      swap3\n        /* \"contracts/Copy_oatfinally.sol\":8981:9003  balance[address(this)] */\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":8981:9016  balance[address(this)] += feeAmount */\n      tag_261\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":9007:9016  feeAmount */\n      dup5\n      swap1\n        /* \"contracts/Copy_oatfinally.sol\":8981:9016  balance[address(this)] += feeAmount */\n      tag_210\n      jump\t// in\n    tag_261:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Copy_oatfinally.sol\":9035:9075  Transfer(from, address(this), feeAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Copy_oatfinally.sol\":9058:9062  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Copy_oatfinally.sol\":9035:9075  Transfer(from, address(this), feeAmount) */\n      dup9\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Copy_oatfinally.sol\":9035:9075  Transfer(from, address(this), feeAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Copy_oatfinally.sol\":8948:9086  if (feeAmount > 0) {... */\n    tag_260:\n        /* \"contracts/Copy_oatfinally.sol\":9102:9120  amount - feeAmount */\n      tag_263\n        /* \"contracts/Copy_oatfinally.sol\":9111:9120  feeAmount */\n      dup2\n        /* \"contracts/Copy_oatfinally.sol\":9102:9108  amount */\n      dup6\n        /* \"contracts/Copy_oatfinally.sol\":9102:9120  amount - feeAmount */\n      tag_143\n      jump\t// in\n    tag_263:\n        /* \"contracts/Copy_oatfinally.sol\":9095:9120  return amount - feeAmount */\n      swap7\n        /* \"contracts/Copy_oatfinally.sol\":8659:9127  function takeTaxes(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:744   */\n    tag_39:\n        /* \"#utility.yul\":308:312   */\n      0x00\n        /* \"#utility.yul\":337:339   */\n      0x20\n        /* \"#utility.yul\":366:368   */\n      dup1\n        /* \"#utility.yul\":355:364   */\n      dup4\n        /* \"#utility.yul\":348:369   */\n      mstore\n        /* \"#utility.yul\":398:404   */\n      dup4\n        /* \"#utility.yul\":392:405   */\n      mload\n        /* \"#utility.yul\":441:447   */\n      dup1\n        /* \"#utility.yul\":436:438   */\n      dup3\n        /* \"#utility.yul\":425:434   */\n      dup6\n        /* \"#utility.yul\":421:439   */\n      add\n        /* \"#utility.yul\":414:448   */\n      mstore\n        /* \"#utility.yul\":466:467   */\n      0x00\n        /* \"#utility.yul\":476:616   */\n    tag_270:\n        /* \"#utility.yul\":490:496   */\n      dup2\n        /* \"#utility.yul\":487:488   */\n      dup2\n        /* \"#utility.yul\":484:497   */\n      lt\n        /* \"#utility.yul\":476:616   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":585:599   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":581:604   */\n      dup4\n      add\n        /* \"#utility.yul\":575:605   */\n      mload\n        /* \"#utility.yul\":551:568   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":570:572   */\n      0x40\n        /* \"#utility.yul\":547:573   */\n      add\n        /* \"#utility.yul\":540:606   */\n      mstore\n        /* \"#utility.yul\":505:515   */\n      dup3\n      add\n        /* \"#utility.yul\":476:616   */\n      jump(tag_270)\n    tag_272:\n        /* \"#utility.yul\":480:483   */\n      pop\n        /* \"#utility.yul\":665:666   */\n      0x00\n        /* \"#utility.yul\":660:662   */\n      0x40\n        /* \"#utility.yul\":651:657   */\n      dup3\n        /* \"#utility.yul\":640:649   */\n      dup7\n        /* \"#utility.yul\":636:658   */\n      add\n        /* \"#utility.yul\":632:663   */\n      add\n        /* \"#utility.yul\":625:667   */\n      mstore\n        /* \"#utility.yul\":735:737   */\n      0x40\n        /* \"#utility.yul\":728:730   */\n      0x1f\n        /* \"#utility.yul\":724:731   */\n      not\n        /* \"#utility.yul\":719:721   */\n      0x1f\n        /* \"#utility.yul\":711:717   */\n      dup4\n        /* \"#utility.yul\":707:722   */\n      add\n        /* \"#utility.yul\":703:732   */\n      and\n        /* \"#utility.yul\":692:701   */\n      dup6\n        /* \"#utility.yul\":688:733   */\n      add\n        /* \"#utility.yul\":684:738   */\n      add\n        /* \"#utility.yul\":676:738   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":196:744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":749:880   */\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":824:855   */\n      dup2\n      and\n        /* \"#utility.yul\":814:856   */\n      dup2\n      eq\n        /* \"#utility.yul\":804:874   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":870:871   */\n      0x00\n        /* \"#utility.yul\":867:868   */\n      dup1\n        /* \"#utility.yul\":860:872   */\n      revert\n        /* \"#utility.yul\":885:1200   */\n    tag_43:\n        /* \"#utility.yul\":953:959   */\n      0x00\n        /* \"#utility.yul\":961:967   */\n      dup1\n        /* \"#utility.yul\":1014:1016   */\n      0x40\n        /* \"#utility.yul\":1002:1011   */\n      dup4\n        /* \"#utility.yul\":993:1000   */\n      dup6\n        /* \"#utility.yul\":989:1012   */\n      sub\n        /* \"#utility.yul\":985:1017   */\n      slt\n        /* \"#utility.yul\":982:1034   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":1030:1031   */\n      0x00\n        /* \"#utility.yul\":1027:1028   */\n      dup1\n        /* \"#utility.yul\":1020:1032   */\n      revert\n        /* \"#utility.yul\":982:1034   */\n    tag_276:\n        /* \"#utility.yul\":1069:1078   */\n      dup3\n        /* \"#utility.yul\":1056:1079   */\n      calldataload\n        /* \"#utility.yul\":1088:1119   */\n      tag_277\n        /* \"#utility.yul\":1113:1118   */\n      dup2\n        /* \"#utility.yul\":1088:1119   */\n      tag_265\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1138:1143   */\n      swap5\n        /* \"#utility.yul\":1190:1192   */\n      0x20\n        /* \"#utility.yul\":1175:1193   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1162:1194   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":885:1200   */\n      jump\t// out\n        /* \"#utility.yul\":1397:1853   */\n    tag_54:\n        /* \"#utility.yul\":1474:1480   */\n      0x00\n        /* \"#utility.yul\":1482:1488   */\n      dup1\n        /* \"#utility.yul\":1490:1496   */\n      0x00\n        /* \"#utility.yul\":1543:1545   */\n      0x60\n        /* \"#utility.yul\":1531:1540   */\n      dup5\n        /* \"#utility.yul\":1522:1529   */\n      dup7\n        /* \"#utility.yul\":1518:1541   */\n      sub\n        /* \"#utility.yul\":1514:1546   */\n      slt\n        /* \"#utility.yul\":1511:1563   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":1559:1560   */\n      0x00\n        /* \"#utility.yul\":1556:1557   */\n      dup1\n        /* \"#utility.yul\":1549:1561   */\n      revert\n        /* \"#utility.yul\":1511:1563   */\n    tag_280:\n        /* \"#utility.yul\":1598:1607   */\n      dup4\n        /* \"#utility.yul\":1585:1608   */\n      calldataload\n        /* \"#utility.yul\":1617:1648   */\n      tag_281\n        /* \"#utility.yul\":1642:1647   */\n      dup2\n        /* \"#utility.yul\":1617:1648   */\n      tag_265\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1667:1672   */\n      swap3\n      pop\n        /* \"#utility.yul\":1724:1726   */\n      0x20\n        /* \"#utility.yul\":1709:1727   */\n      dup5\n      add\n        /* \"#utility.yul\":1696:1728   */\n      calldataload\n        /* \"#utility.yul\":1737:1770   */\n      tag_282\n        /* \"#utility.yul\":1696:1728   */\n      dup2\n        /* \"#utility.yul\":1737:1770   */\n      tag_265\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1397:1853   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1789:1796   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1843:1845   */\n      0x40\n        /* \"#utility.yul\":1828:1846   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1815:1847   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1397:1853   */\n      jump\t// out\n        /* \"#utility.yul\":1858:2105   */\n    tag_60:\n        /* \"#utility.yul\":1917:1923   */\n      0x00\n        /* \"#utility.yul\":1970:1972   */\n      0x20\n        /* \"#utility.yul\":1958:1967   */\n      dup3\n        /* \"#utility.yul\":1949:1956   */\n      dup5\n        /* \"#utility.yul\":1945:1968   */\n      sub\n        /* \"#utility.yul\":1941:1973   */\n      slt\n        /* \"#utility.yul\":1938:1990   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":1986:1987   */\n      0x00\n        /* \"#utility.yul\":1983:1984   */\n      dup1\n        /* \"#utility.yul\":1976:1988   */\n      revert\n        /* \"#utility.yul\":1938:1990   */\n    tag_284:\n        /* \"#utility.yul\":2025:2034   */\n      dup2\n        /* \"#utility.yul\":2012:2035   */\n      calldataload\n        /* \"#utility.yul\":2044:2075   */\n      tag_140\n        /* \"#utility.yul\":2069:2074   */\n      dup2\n        /* \"#utility.yul\":2044:2075   */\n      tag_265\n      jump\t// in\n        /* \"#utility.yul\":2507:2687   */\n    tag_80:\n        /* \"#utility.yul\":2566:2572   */\n      0x00\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2607:2616   */\n      dup3\n        /* \"#utility.yul\":2598:2605   */\n      dup5\n        /* \"#utility.yul\":2594:2617   */\n      sub\n        /* \"#utility.yul\":2590:2622   */\n      slt\n        /* \"#utility.yul\":2587:2639   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2635:2636   */\n      0x00\n        /* \"#utility.yul\":2632:2633   */\n      dup1\n        /* \"#utility.yul\":2625:2637   */\n      revert\n        /* \"#utility.yul\":2587:2639   */\n    tag_289:\n      pop\n        /* \"#utility.yul\":2658:2681   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2507:2687   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2918:3306   */\n    tag_123:\n        /* \"#utility.yul\":2986:2992   */\n      0x00\n        /* \"#utility.yul\":2994:3000   */\n      dup1\n        /* \"#utility.yul\":3047:3049   */\n      0x40\n        /* \"#utility.yul\":3035:3044   */\n      dup4\n        /* \"#utility.yul\":3026:3033   */\n      dup6\n        /* \"#utility.yul\":3022:3045   */\n      sub\n        /* \"#utility.yul\":3018:3050   */\n      slt\n        /* \"#utility.yul\":3015:3067   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3063:3064   */\n      0x00\n        /* \"#utility.yul\":3060:3061   */\n      dup1\n        /* \"#utility.yul\":3053:3065   */\n      revert\n        /* \"#utility.yul\":3015:3067   */\n    tag_292:\n        /* \"#utility.yul\":3102:3111   */\n      dup3\n        /* \"#utility.yul\":3089:3112   */\n      calldataload\n        /* \"#utility.yul\":3121:3152   */\n      tag_293\n        /* \"#utility.yul\":3146:3151   */\n      dup2\n        /* \"#utility.yul\":3121:3152   */\n      tag_265\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3171:3176   */\n      swap2\n      pop\n        /* \"#utility.yul\":3228:3230   */\n      0x20\n        /* \"#utility.yul\":3213:3231   */\n      dup4\n      add\n        /* \"#utility.yul\":3200:3232   */\n      calldataload\n        /* \"#utility.yul\":3241:3274   */\n      tag_294\n        /* \"#utility.yul\":3200:3232   */\n      dup2\n        /* \"#utility.yul\":3241:3274   */\n      tag_265\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3293:3300   */\n      dup1\n        /* \"#utility.yul\":3283:3300   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2918:3306   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3311:3438   */\n    tag_266:\n        /* \"#utility.yul\":3372:3382   */\n      0x4e487b71\n        /* \"#utility.yul\":3367:3370   */\n      0xe0\n        /* \"#utility.yul\":3363:3383   */\n      shl\n        /* \"#utility.yul\":3360:3361   */\n      0x00\n        /* \"#utility.yul\":3353:3384   */\n      mstore\n        /* \"#utility.yul\":3403:3407   */\n      0x11\n        /* \"#utility.yul\":3400:3401   */\n      0x04\n        /* \"#utility.yul\":3393:3408   */\n      mstore\n        /* \"#utility.yul\":3427:3431   */\n      0x24\n        /* \"#utility.yul\":3424:3425   */\n      0x00\n        /* \"#utility.yul\":3417:3432   */\n      revert\n        /* \"#utility.yul\":3443:3571   */\n    tag_143:\n        /* \"#utility.yul\":3510:3519   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3531:3542   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3528:3565   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":3545:3563   */\n      tag_135\n      tag_266\n      jump\t// in\n        /* \"#utility.yul\":5906:6031   */\n    tag_210:\n        /* \"#utility.yul\":5971:5980   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5992:6002   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5989:6025   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":6005:6023   */\n      tag_135\n      tag_266\n      jump\t// in\n        /* \"#utility.yul\":6529:6656   */\n    tag_230:\n        /* \"#utility.yul\":6590:6600   */\n      0x4e487b71\n        /* \"#utility.yul\":6585:6588   */\n      0xe0\n        /* \"#utility.yul\":6581:6601   */\n      shl\n        /* \"#utility.yul\":6578:6579   */\n      0x00\n        /* \"#utility.yul\":6571:6602   */\n      mstore\n        /* \"#utility.yul\":6621:6625   */\n      0x32\n        /* \"#utility.yul\":6618:6619   */\n      0x04\n        /* \"#utility.yul\":6611:6626   */\n      mstore\n        /* \"#utility.yul\":6645:6649   */\n      0x24\n        /* \"#utility.yul\":6642:6643   */\n      0x00\n        /* \"#utility.yul\":6635:6650   */\n      revert\n        /* \"#utility.yul\":6661:6912   */\n    tag_234:\n        /* \"#utility.yul\":6731:6737   */\n      0x00\n        /* \"#utility.yul\":6784:6786   */\n      0x20\n        /* \"#utility.yul\":6772:6781   */\n      dup3\n        /* \"#utility.yul\":6763:6770   */\n      dup5\n        /* \"#utility.yul\":6759:6782   */\n      sub\n        /* \"#utility.yul\":6755:6787   */\n      slt\n        /* \"#utility.yul\":6752:6804   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6797:6798   */\n      dup1\n        /* \"#utility.yul\":6790:6802   */\n      revert\n        /* \"#utility.yul\":6752:6804   */\n    tag_312:\n        /* \"#utility.yul\":6832:6841   */\n      dup2\n        /* \"#utility.yul\":6826:6842   */\n      mload\n        /* \"#utility.yul\":6851:6882   */\n      tag_140\n        /* \"#utility.yul\":6876:6881   */\n      dup2\n        /* \"#utility.yul\":6851:6882   */\n      tag_265\n      jump\t// in\n        /* \"#utility.yul\":6917:7897   */\n    tag_239:\n        /* \"#utility.yul\":7179:7183   */\n      0x00\n        /* \"#utility.yul\":7227:7230   */\n      0xa0\n        /* \"#utility.yul\":7216:7225   */\n      dup3\n        /* \"#utility.yul\":7212:7231   */\n      add\n        /* \"#utility.yul\":7258:7264   */\n      dup8\n        /* \"#utility.yul\":7247:7256   */\n      dup4\n        /* \"#utility.yul\":7240:7265   */\n      mstore\n        /* \"#utility.yul\":7284:7286   */\n      0x20\n        /* \"#utility.yul\":7322:7328   */\n      dup8\n        /* \"#utility.yul\":7317:7319   */\n      dup2\n        /* \"#utility.yul\":7306:7315   */\n      dup6\n        /* \"#utility.yul\":7302:7320   */\n      add\n        /* \"#utility.yul\":7295:7329   */\n      mstore\n        /* \"#utility.yul\":7365:7368   */\n      0xa0\n        /* \"#utility.yul\":7360:7362   */\n      0x40\n        /* \"#utility.yul\":7349:7358   */\n      dup6\n        /* \"#utility.yul\":7345:7363   */\n      add\n        /* \"#utility.yul\":7338:7369   */\n      mstore\n        /* \"#utility.yul\":7389:7395   */\n      dup2\n        /* \"#utility.yul\":7424:7430   */\n      dup8\n        /* \"#utility.yul\":7418:7431   */\n      mload\n        /* \"#utility.yul\":7455:7461   */\n      dup1\n        /* \"#utility.yul\":7447:7453   */\n      dup5\n        /* \"#utility.yul\":7440:7462   */\n      mstore\n        /* \"#utility.yul\":7493:7496   */\n      0xc0\n        /* \"#utility.yul\":7482:7491   */\n      dup7\n        /* \"#utility.yul\":7478:7497   */\n      add\n        /* \"#utility.yul\":7471:7497   */\n      swap2\n      pop\n        /* \"#utility.yul\":7532:7534   */\n      dup3\n        /* \"#utility.yul\":7524:7530   */\n      dup10\n        /* \"#utility.yul\":7520:7535   */\n      add\n        /* \"#utility.yul\":7506:7535   */\n      swap4\n      pop\n        /* \"#utility.yul\":7553:7554   */\n      0x00\n        /* \"#utility.yul\":7563:7758   */\n    tag_315:\n        /* \"#utility.yul\":7577:7583   */\n      dup2\n        /* \"#utility.yul\":7574:7575   */\n      dup2\n        /* \"#utility.yul\":7571:7584   */\n      lt\n        /* \"#utility.yul\":7563:7758   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":7642:7655   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7638:7677   */\n      and\n        /* \"#utility.yul\":7626:7678   */\n      dup4\n      mstore\n        /* \"#utility.yul\":7733:7748   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":7698:7710   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":7674:7675   */\n      0x01\n        /* \"#utility.yul\":7592:7601   */\n      add\n        /* \"#utility.yul\":7563:7758   */\n      jump(tag_315)\n    tag_317:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7814:7846   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":7809:7811   */\n      0x60\n        /* \"#utility.yul\":7794:7812   */\n      dup6\n      add\n        /* \"#utility.yul\":7787:7847   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7878:7881   */\n      0x80\n        /* \"#utility.yul\":7863:7882   */\n      add\n        /* \"#utility.yul\":7856:7891   */\n      mstore\n        /* \"#utility.yul\":7775:7778   */\n      swap4\n        /* \"#utility.yul\":6917:7897   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8112:8280   */\n    tag_257:\n        /* \"#utility.yul\":8185:8194   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8216:8225   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8233:8248   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8227:8249   */\n      dup5\n      eq\n        /* \"#utility.yul\":8213:8250   */\n      or\n        /* \"#utility.yul\":8203:8274   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":8254:8272   */\n      tag_135\n      tag_266\n      jump\t// in\n        /* \"#utility.yul\":8285:8502   */\n    tag_259:\n        /* \"#utility.yul\":8325:8326   */\n      0x00\n        /* \"#utility.yul\":8351:8352   */\n      dup3\n        /* \"#utility.yul\":8341:8473   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":8395:8405   */\n      0x4e487b71\n        /* \"#utility.yul\":8390:8393   */\n      0xe0\n        /* \"#utility.yul\":8386:8406   */\n      shl\n        /* \"#utility.yul\":8383:8384   */\n      0x00\n        /* \"#utility.yul\":8376:8407   */\n      mstore\n        /* \"#utility.yul\":8430:8434   */\n      0x12\n        /* \"#utility.yul\":8427:8428   */\n      0x04\n        /* \"#utility.yul\":8420:8435   */\n      mstore\n        /* \"#utility.yul\":8458:8462   */\n      0x24\n        /* \"#utility.yul\":8455:8456   */\n      0x00\n        /* \"#utility.yul\":8448:8463   */\n      revert\n        /* \"#utility.yul\":8341:8473   */\n    tag_323:\n      pop\n        /* \"#utility.yul\":8487:8496   */\n      div\n      swap1\n        /* \"#utility.yul\":8285:8502   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201c08a09101aa0a4b8f211ac0cb77e6e30d02998ff6254de63448ada24afc14e664736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1343": {
									"entryPoint": null,
									"id": 1343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1425": {
									"entryPoint": 798,
									"id": 1425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 718,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_90a95530d1322b333c7941620a019b0c454dda3ff9100d19c743d31f2ecc0a45__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1145:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "277:209:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "323:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "332:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "335:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "325:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "325:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "325:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "298:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "307:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "294:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "294:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "290:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:32:7"
															},
															"nodeType": "YulIf",
															"src": "287:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "348:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "367:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "361:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "361:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "352:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "440:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "449:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "452:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "399:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "410:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "425:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "430:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "421:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "421:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "434:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "417:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "417:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "406:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "406:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "396:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "396:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "389:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "389:50:7"
															},
															"nodeType": "YulIf",
															"src": "386:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "465:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "475:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "465:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "243:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "254:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "266:6:7",
														"type": ""
													}
												],
												"src": "196:290:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "620:175:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "642:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "653:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "638:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "630:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "665:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "688:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "679:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "679:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "692:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "675:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "669:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "710:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "725:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "733:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "721:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "721:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "703:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "703:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "757:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "768:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "753:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "753:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "777:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "746:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "746:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "746:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "581:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "592:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "600:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "611:4:7",
														"type": ""
													}
												],
												"src": "491:304:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "974:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "991:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1002:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "984:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1021:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1014:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1014:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1014:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1075:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:18:7"
																	},
																	{
																		"hexValue": "45524332303a205a65726f2041646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1080:21:7",
																		"type": "",
																		"value": "ERC20: Zero Address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1053:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:49:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1053:49:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1111:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1123:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1119:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1111:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_90a95530d1322b333c7941620a019b0c454dda3ff9100d19c743d31f2ecc0a45__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "951:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "965:4:7",
														"type": ""
													}
												],
												"src": "800:343:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_90a95530d1322b333c7941620a019b0c454dda3ff9100d19c743d31f2ecc0a45__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ERC20: Zero Address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x7530 PUSH1 0x5 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x845D553BD206C5F1773C063B452D00AA942C3BEC OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x49 CALLER PUSH3 0x2CE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D OR SWAP1 SSTORE DUP4 DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH11 0x52B7D2DCC80CD2E4000000 SWAP1 DUP2 SWAP1 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x13F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x165 SWAP2 SWAP1 PUSH3 0x3EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1ED SWAP2 SWAP1 PUSH3 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x23A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x260 SWAP2 SWAP1 PUSH3 0x3EA JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH3 0x2AC SWAP2 CALLER SWAP2 AND PUSH1 0x0 NOT PUSH3 0x31E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH3 0x2C8 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 NOT PUSH3 0x31E JUMP JUMPDEST PUSH3 0x41C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x45524332303A205A65726F2041646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x45524332303A205A65726F2041646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFE8 DUP1 PUSH3 0x42C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xDC9D75B0 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xE9451F5F EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xA01C3483 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27889862 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x27889862 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x452ED4F1 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x694E80C3 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x445B667 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x140 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x27B7329020B737B7 PUSH1 0xC1 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2AA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x58A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x913D055 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x19B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0xDEAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x2AA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x64 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x400 CALLDATASIZE PUSH1 0x4 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x45B CALLDATASIZE PUSH1 0x4 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D CALLER DUP5 DUP5 PUSH2 0x62E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x4DC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4D6 SWAP1 DUP5 SWAP1 PUSH2 0xEAF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0x4E7 DUP5 DUP5 DUP5 PUSH2 0x6F2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4F9 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206C6F776572206E6F742061636365707465642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2B7CE9CD4278161EEF9245955C9A851618488A07E830194C60A88F0224AD3CC0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x592 PUSH2 0x98B JUMP JUMPDEST PUSH2 0x59C PUSH1 0x0 PUSH2 0x9E5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB CALLER DUP5 DUP5 PUSH2 0x6F2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5BD PUSH2 0x98B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH2 0x62B DUP2 PUSH2 0x9E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x45524332303A205A65726F2041646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x45524332303A205A65726F2041646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH2 0x828 DUP6 DUP6 PUSH2 0xA35 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83E JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x867 JUMPI ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x865 JUMPI PUSH2 0x865 DUP2 PUSH2 0xA80 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x8A6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x8AF JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x8D7 SWAP1 DUP5 SWAP1 PUSH2 0xEAF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP DUP2 PUSH2 0x8EA JUMPI DUP4 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x8FE DUP7 PUSH2 0x8F8 DUP9 DUP9 PUSH2 0xA35 JUMP JUMPDEST DUP7 PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x92B SWAP1 DUP5 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x977 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA78 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAC8 JUMPI PUSH2 0xAC8 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB58 JUMPI PUSH2 0xB58 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x7 SLOAD SWAP1 SWAP5 AND DUP3 MSTORE SWAP3 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xBC2 JUMPI ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x0 NOT SWAP1 SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0xBFB SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC26 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xC30 JUMPI POP PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE ISZERO PUSH2 0xC90 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 POP POP JUMPDEST POP POP JUMPDEST POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO PUSH2 0xCB0 JUMPI POP PUSH1 0x2 JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xCC1 JUMPI DUP3 SWAP2 POP POP PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xCCF DUP4 DUP7 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0xCD9 SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD46 JUMPI ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD00 SWAP1 DUP5 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH2 0xD50 DUP2 DUP6 PUSH2 0xEAF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD87 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xD6B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xDDB DUP2 PUSH2 0xDA8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE09 DUP2 PUSH2 0xDA8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xE19 DUP2 PUSH2 0xDA8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4EA DUP2 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE7E DUP2 PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE8E DUP2 PUSH2 0xDA8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0xE99 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0xE99 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4EA DUP2 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF58 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF33 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFAD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR ADDMOD LOG0 SWAP2 ADD 0xAA EXP 0x4B DUP16 0x21 BYTE 0xC0 0xCB PUSH24 0xE6E30D02998FF6254DE63448ADA24AFC14E664736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "3811:6364:6:-:0;;;5087:6;5056:37;;5192:96;;;-1:-1:-1;;;;;;5192:96:6;5245:42;5192:96;;;5762:583;;;;;;;;;-1:-1:-1;936:32:0;719:10:5;936:18:0;:32::i;:::-;5793:10:6;5786:18;;;;:6;:18;;;;;;;;:25;;-1:-1:-1;;5786:25:6;;;5807:4;5786:25;;;;;;5836:4;5821:21;;;;;:28;;;;;;;;;;5860:10;:66;;-1:-1:-1;;;;;;5860:66:6;5883:42;5860:66;;;5936:19;;;:7;:19;;;;;5030:20;5936:34;;;;5985:46;;160:25:7;;;5985:46:6;;133:18:7;5985:46:6;;;;;;;6062:10;;;;;;;;;-1:-1:-1;;;;;6062:10:6;-1:-1:-1;;;;;6062:18:6;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6051:43:6;;6108:10;;;;;;;;;-1:-1:-1;;;;;6108:10:6;-1:-1:-1;;;;;6108:15:6;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6051:111;;-1:-1:-1;;;;;;6051:111:6;;;;;;;-1:-1:-1;;;;;721:15:7;;;6051:111:6;;;703:34:7;6147:4:6;753:18:7;;;746:43;638:18;;6051:111:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6042:6;:120;;-1:-1:-1;;;;;;6042:120:6;-1:-1:-1;;;;;6042:120:6;;;;;;;;;-1:-1:-1;6172:16:6;;;:8;:16;;;;;:23;;-1:-1:-1;;6172:23:6;-1:-1:-1;6172:23:6;;;6234:10;;6205:60;;6214:10;;6234;-1:-1:-1;;6205:8:6;:60::i;:::-;6307:10;;6275:63;;6292:4;;-1:-1:-1;;;;;6307:10:6;-1:-1:-1;;6275:8:6;:63::i;:::-;3811:6364;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;6774:285:6:-;-1:-1:-1;;;;;6898:20:6;;6890:52;;;;-1:-1:-1;;;6890:52:6;;1002:2:7;6890:52:6;;;984:21:7;1041:2;1021:18;;;1014:30;-1:-1:-1;;;1060:18:7;;;1053:49;1119:18;;6890:52:6;;;;;;;;;-1:-1:-1;;;;;6960:21:6;;6952:53;;;;-1:-1:-1;;;6952:53:6;;1002:2:7;6952:53:6;;;984:21:7;1041:2;1021:18;;;1014:30;-1:-1:-1;;;1060:18:7;;;1053:49;1119:18;;6952:53:6;800:343:7;6952:53:6;-1:-1:-1;;;;;7015:19:6;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:37;6774:285::o;196:290:7:-;266:6;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;361:16;;-1:-1:-1;;;;;406:31:7;;396:42;;386:70;;452:1;449;442:12;386:70;475:5;196:290;-1:-1:-1;;;196:290:7:o;800:343::-;3811:6364:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEAD_WALLET_1227": {
									"entryPoint": null,
									"id": 1227,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1347": {
									"entryPoint": null,
									"id": 1347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1425": {
									"entryPoint": 1582,
									"id": 1425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2443,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_totalSupply_1197": {
									"entryPoint": null,
									"id": 1197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 2533,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1620": {
									"entryPoint": 1778,
									"id": 1620,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@allowance_1159": {
									"entryPoint": null,
									"id": 1159,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1387": {
									"entryPoint": 1120,
									"id": 1387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1172": {
									"entryPoint": null,
									"id": 1172,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeThreshold_1823": {
									"entryPoint": 1265,
									"id": 1823,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1117": {
									"entryPoint": null,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fee_denominator_1206": {
									"entryPoint": null,
									"id": 1206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getOwner_1142": {
									"entryPoint": null,
									"id": 1142,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@internalSwap_1800": {
									"entryPoint": 2688,
									"id": 1800,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isNoFeeWallet_1479": {
									"entryPoint": null,
									"id": 1479,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@is_sell_1502": {
									"entryPoint": 2613,
									"id": 1502,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lpPair_1229": {
									"entryPoint": null,
									"id": 1229,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_1133": {
									"entryPoint": null,
									"id": 1133,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1418,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellfee_1203": {
									"entryPoint": null,
									"id": 1203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapRouter_1215": {
									"entryPoint": null,
									"id": 1215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapThreshold_1200": {
									"entryPoint": null,
									"id": 1200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_1125": {
									"entryPoint": null,
									"id": 1125,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@takeTaxes_1684": {
									"entryPoint": 3235,
									"id": 1684,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalSupply_1101": {
									"entryPoint": null,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1467": {
									"entryPoint": 1143,
									"id": 1467,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 1461,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1367": {
									"entryPoint": 1438,
									"id": 1367,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IRouter02_$1078__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dad2f8886c08710606ebfd8c376d6126d3e9e6b55090812a14efb9583dd417d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_90a95530d1322b333c7941620a019b0c454dda3ff9100d19c743d31f2ecc0a45__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3797,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8504:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "317:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "327:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "337:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "331:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "355:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "366:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "348:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "348:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "348:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "378:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "398:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "392:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "382:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "436:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "441:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "414:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "414:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "457:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "466:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "461:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "555:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "566:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "551:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "551:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "570:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "547:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "547:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "589:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "597:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "585:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "585:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "601:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "581:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "581:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "575:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "575:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "540:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "540:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "540:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "487:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "490:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "484:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "484:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "498:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "500:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "509:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "512:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "505:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "505:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "500:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "480:3:7",
																"statements": []
															},
															"src": "476:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "640:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "651:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "636:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "636:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "660:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "632:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "665:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "625:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "625:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "676:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "692:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "711:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "719:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "707:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "707:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "728:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "724:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "724:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "703:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "703:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "684:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "676:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "286:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "297:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "308:4:7",
														"type": ""
													}
												],
												"src": "196:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:86:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "858:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "867:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "870:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "860:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "860:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "860:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "817:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "828:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "843:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "848:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "839:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "839:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "852:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "835:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "835:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "824:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "824:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "814:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "814:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "807:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:50:7"
															},
															"nodeType": "YulIf",
															"src": "804:70:7"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "783:5:7",
														"type": ""
													}
												],
												"src": "749:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "972:228:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1018:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1030:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1020:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1020:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1020:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "993:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1002:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "989:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1014:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "985:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:32:7"
															},
															"nodeType": "YulIf",
															"src": "982:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1043:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1069:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1056:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1047:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1113:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1088:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1088:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1128:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1138:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1152:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1179:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1190:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1175:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1175:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1162:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1162:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1152:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "930:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "941:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "953:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "961:6:7",
														"type": ""
													}
												],
												"src": "885:315:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1300:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1310:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1322:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1333:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1318:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1310:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1377:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1370:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1370:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1363:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1363:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1269:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1280:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1291:4:7",
														"type": ""
													}
												],
												"src": "1205:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1501:352:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1547:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1556:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1559:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1549:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1549:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1549:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1522:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1531:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1518:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1514:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1514:32:7"
															},
															"nodeType": "YulIf",
															"src": "1511:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1572:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1598:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1585:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1576:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1642:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1617:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1617:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1657:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1667:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1681:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1713:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1724:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1709:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1709:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1696:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1685:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1762:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1737:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1737:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1737:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1779:17:7",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1789:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1805:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1832:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1843:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1828:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1828:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1815:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1815:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1805:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1462:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1474:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1482:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1490:6:7",
														"type": ""
													}
												],
												"src": "1397:456:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1928:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1974:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1986:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1976:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1976:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1949:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1958:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1945:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1945:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1970:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1941:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1941:32:7"
															},
															"nodeType": "YulIf",
															"src": "1938:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1999:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2025:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2012:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2003:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2069:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2044:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2044:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2044:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2084:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2094:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2084:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1894:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1905:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1917:6:7",
														"type": ""
													}
												],
												"src": "1858:247:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2207:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2217:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2229:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2240:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2225:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2217:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2259:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2274:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2282:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2270:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2270:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2252:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2176:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2187:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2198:4:7",
														"type": ""
													}
												],
												"src": "2110:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2400:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2410:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2422:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2433:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2418:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2410:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2452:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2467:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2483:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2488:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2479:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2479:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2492:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2475:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2475:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2445:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2445:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2445:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2369:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2380:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2391:4:7",
														"type": ""
													}
												],
												"src": "2299:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2577:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2623:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2632:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2635:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2625:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2625:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2625:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2598:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2607:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2594:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2594:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2590:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2590:32:7"
															},
															"nodeType": "YulIf",
															"src": "2587:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2648:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2658:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2648:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2543:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2554:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2566:6:7",
														"type": ""
													}
												],
												"src": "2507:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2811:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2821:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2833:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2844:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2829:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2821:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2878:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2894:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2899:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2890:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2890:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2903:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2886:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2886:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2874:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2856:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2856:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IRouter02_$1078__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2780:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2791:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2802:4:7",
														"type": ""
													}
												],
												"src": "2692:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3005:301:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3051:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3060:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3063:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3053:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3053:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3053:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3026:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3035:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3022:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3022:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3047:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3018:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3018:32:7"
															},
															"nodeType": "YulIf",
															"src": "3015:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3076:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3102:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3089:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3089:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3080:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3146:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3121:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3121:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3161:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3171:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3161:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3185:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3217:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3228:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3213:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3213:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3200:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3189:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3266:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3241:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3241:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3241:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3283:17:7",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3293:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2963:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2974:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2986:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2994:6:7",
														"type": ""
													}
												],
												"src": "2918:388:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3343:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3360:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3367:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3372:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3363:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3353:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3353:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3353:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3400:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3393:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3393:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3393:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3427:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3417:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3311:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3492:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3502:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3514:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3517:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3502:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3543:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3545:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3545:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3545:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3534:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3540:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3531:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:11:7"
															},
															"nodeType": "YulIf",
															"src": "3528:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3474:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3477:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3483:4:7",
														"type": ""
													}
												],
												"src": "3443:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3750:176:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3767:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3778:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3760:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3760:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3760:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3801:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3812:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3797:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3797:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3817:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3840:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3851:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3836:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3836:18:7"
																	},
																	{
																		"hexValue": "416d6f756e74206c6f776572206e6f742061636365707465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3856:28:7",
																		"type": "",
																		"value": "Amount lower not accepted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:56:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3829:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3894:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3906:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3917:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3902:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3894:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dad2f8886c08710606ebfd8c376d6126d3e9e6b55090812a14efb9583dd417d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3727:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3741:4:7",
														"type": ""
													}
												],
												"src": "3576:350:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4105:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4122:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4133:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4115:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4115:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4115:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4167:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4172:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4145:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4145:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4145:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4195:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4206:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4191:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4191:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4211:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4184:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4184:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4266:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4277:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4262:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4262:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4282:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4255:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4255:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4255:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4300:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4312:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4323:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4308:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4308:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4300:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4082:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4096:4:7",
														"type": ""
													}
												],
												"src": "3931:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4512:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4529:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4540:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4522:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4522:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4522:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4563:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4574:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4559:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4559:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4579:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4552:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4552:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4602:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4613:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4598:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:18:7"
																	},
																	{
																		"hexValue": "45524332303a205a65726f2041646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4618:21:7",
																		"type": "",
																		"value": "ERC20: Zero Address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4591:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:49:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4591:49:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4649:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4661:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4672:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4657:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4657:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4649:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_90a95530d1322b333c7941620a019b0c454dda3ff9100d19c743d31f2ecc0a45__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4489:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4503:4:7",
														"type": ""
													}
												],
												"src": "4338:343:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4860:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4877:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4888:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4870:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4911:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4922:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4907:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4907:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4927:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4900:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4900:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4900:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4950:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4961:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4946:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4946:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4966:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4939:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4939:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5021:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5032:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5017:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5017:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5037:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5010:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5010:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5052:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5064:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5060:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5052:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4837:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4851:4:7",
														"type": ""
													}
												],
												"src": "4686:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5264:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5281:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5292:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5274:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5274:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5274:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5315:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5326:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5311:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5331:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5304:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5304:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5354:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5365:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5350:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5350:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5370:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5343:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5343:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5441:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5458:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5470:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5481:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5466:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5466:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5458:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5241:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5255:4:7",
														"type": ""
													}
												],
												"src": "5090:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5670:231:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5687:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5698:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5680:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5680:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5680:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5721:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5732:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5717:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5717:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5737:2:7",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5710:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5710:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5710:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5760:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5771:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5756:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5756:18:7"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5776:34:7",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5749:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5749:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5749:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5831:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5842:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5827:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5827:18:7"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5847:11:7",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5820:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5820:39:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5820:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5868:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5880:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5891:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5876:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5868:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5647:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5661:4:7",
														"type": ""
													}
												],
												"src": "5496:405:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5954:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5964:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5975:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5978:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5964:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6003:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6005:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6005:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6005:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5995:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5998:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5992:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:10:7"
															},
															"nodeType": "YulIf",
															"src": "5989:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5937:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5940:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5946:3:7",
														"type": ""
													}
												],
												"src": "5906:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6210:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6227:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6238:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6220:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6220:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6220:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6261:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6272:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6257:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6257:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6277:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6250:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6250:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6250:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6300:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6311:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6296:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6296:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6316:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6289:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6289:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6289:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6360:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6372:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6383:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6368:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6368:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6360:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6187:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6201:4:7",
														"type": ""
													}
												],
												"src": "6036:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6429:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6446:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6453:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6458:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6449:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6449:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6439:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6439:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6486:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6489:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6479:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6479:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6479:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6510:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6513:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6503:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6503:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6503:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6397:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6561:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6578:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6585:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6590:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6581:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6581:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6571:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6571:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6571:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6618:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6621:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6611:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6611:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6611:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6642:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6645:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6635:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6635:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6635:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6529:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6742:170:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6788:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6797:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6800:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6790:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6790:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6790:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6763:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6772:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6759:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6759:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6784:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6755:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6755:32:7"
															},
															"nodeType": "YulIf",
															"src": "6752:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6813:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6832:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6826:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6826:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6817:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6876:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6851:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6851:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6851:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6891:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6901:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6891:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6708:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6719:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6731:6:7",
														"type": ""
													}
												],
												"src": "6661:251:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7188:709:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7198:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7216:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7227:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7212:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7212:19:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7202:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7247:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7258:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7240:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7240:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7240:25:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7274:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7284:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7278:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7306:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7317:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7302:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7302:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7322:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7295:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7295:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7349:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7360:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7345:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7345:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7365:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7338:31:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7378:17:7",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "7389:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "7382:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7404:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7424:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7418:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7418:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7408:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7447:6:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7455:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7440:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7440:22:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7471:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7482:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7493:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7478:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7478:19:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7471:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7506:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7524:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7532:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7520:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7520:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7510:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7544:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7553:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7548:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7612:146:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7633:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7648:6:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7642:5:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7642:13:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7665:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7670:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "7661:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7661:11:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7674:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "7657:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7657:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7638:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7638:39:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7626:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7626:52:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7626:52:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7691:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7702:3:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7707:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7698:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7698:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7691:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7723:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7737:6:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7745:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7733:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7733:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7723:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7574:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7577:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7571:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7571:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7585:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7587:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7596:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7592:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7592:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7587:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7567:3:7",
																"statements": []
															},
															"src": "7563:195:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7767:11:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7775:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7767:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7798:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7809:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7794:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "7818:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7834:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7839:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7830:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7830:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7843:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7826:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7826:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7814:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7814:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7787:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7787:60:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7787:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7867:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7878:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7863:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7863:19:7"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7884:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7856:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7856:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7856:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7125:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7136:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7144:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7152:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7160:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7168:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7179:4:7",
														"type": ""
													}
												],
												"src": "6917:980:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8093:14:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8095:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8102:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8095:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8077:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8085:3:7",
														"type": ""
													}
												],
												"src": "7902:205:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8164:116:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8174:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8189:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8192:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8185:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8185:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8174:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8252:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8254:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8254:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8254:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8223:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8216:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8216:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8230:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8237:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8246:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8233:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8233:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8227:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8227:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8213:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8213:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8206:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:45:7"
															},
															"nodeType": "YulIf",
															"src": "8203:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8143:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8146:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8152:7:7",
														"type": ""
													}
												],
												"src": "8112:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8331:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8362:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8383:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8390:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8395:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8386:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8386:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8376:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8376:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8376:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8427:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8430:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8420:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8420:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8420:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8455:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8458:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8448:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8448:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8448:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8351:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8344:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:9:7"
															},
															"nodeType": "YulIf",
															"src": "8341:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8482:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8491:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8494:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8487:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8487:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8482:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8316:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8319:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8325:1:7",
														"type": ""
													}
												],
												"src": "8285:217:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IRouter02_$1078__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0dad2f8886c08710606ebfd8c376d6126d3e9e6b55090812a14efb9583dd417d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Amount lower not accepted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_90a95530d1322b333c7941620a019b0c454dda3ff9100d19c743d31f2ecc0a45__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ERC20: Zero Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xDC9D75B0 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xE9451F5F EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xA01C3483 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27889862 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x27889862 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x452ED4F1 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x694E80C3 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x445B667 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x140 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x27B7329020B737B7 PUSH1 0xC1 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2AA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x58A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x913D055 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x19B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0xDEAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x2AA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x64 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x400 CALLDATASIZE PUSH1 0x4 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x45B CALLDATASIZE PUSH1 0x4 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D CALLER DUP5 DUP5 PUSH2 0x62E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x4DC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4D6 SWAP1 DUP5 SWAP1 PUSH2 0xEAF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0x4E7 DUP5 DUP5 DUP5 PUSH2 0x6F2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4F9 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206C6F776572206E6F742061636365707465642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2B7CE9CD4278161EEF9245955C9A851618488A07E830194C60A88F0224AD3CC0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x592 PUSH2 0x98B JUMP JUMPDEST PUSH2 0x59C PUSH1 0x0 PUSH2 0x9E5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB CALLER DUP5 DUP5 PUSH2 0x6F2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5BD PUSH2 0x98B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH2 0x62B DUP2 PUSH2 0x9E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x45524332303A205A65726F2041646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x45524332303A205A65726F2041646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH2 0x828 DUP6 DUP6 PUSH2 0xA35 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83E JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x867 JUMPI ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x865 JUMPI PUSH2 0x865 DUP2 PUSH2 0xA80 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x8A6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x8AF JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x8D7 SWAP1 DUP5 SWAP1 PUSH2 0xEAF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP DUP2 PUSH2 0x8EA JUMPI DUP4 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x8FE DUP7 PUSH2 0x8F8 DUP9 DUP9 PUSH2 0xA35 JUMP JUMPDEST DUP7 PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x92B SWAP1 DUP5 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x977 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA78 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAC8 JUMPI PUSH2 0xAC8 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB58 JUMPI PUSH2 0xB58 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x7 SLOAD SWAP1 SWAP5 AND DUP3 MSTORE SWAP3 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xBC2 JUMPI ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x0 NOT SWAP1 SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0xBFB SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC26 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xC30 JUMPI POP PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE ISZERO PUSH2 0xC90 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 POP POP JUMPDEST POP POP JUMPDEST POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO PUSH2 0xCB0 JUMPI POP PUSH1 0x2 JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xCC1 JUMPI DUP3 SWAP2 POP POP PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xCCF DUP4 DUP7 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0xCD9 SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD46 JUMPI ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD00 SWAP1 DUP5 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH2 0xD50 DUP2 DUP6 PUSH2 0xEAF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD87 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xD6B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xDDB DUP2 PUSH2 0xDA8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE09 DUP2 PUSH2 0xDA8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xE19 DUP2 PUSH2 0xDA8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4EA DUP2 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE7E DUP2 PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE8E DUP2 PUSH2 0xDA8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0xE99 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0xE99 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4EA DUP2 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF58 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF33 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFAD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR ADDMOD LOG0 SWAP2 ADD 0xAA EXP 0x4B DUP16 0x21 BYTE 0xC0 0xCB PUSH24 0xE6E30D02998FF6254DE63448ADA24AFC14E664736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "3811:6364:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5056:37;;;;;;;;;;;;;;;;;;;160:25:7;;;148:2;133:18;5056:37:6;;;;;;;;4288:84;;;;;;;;;;-1:-1:-1;4360:5:6;;;;;;;;;;;;-1:-1:-1;;;4360:5:6;;;;4288:84;;;;;;;:::i;6582:186::-;;;;;;;;;;-1:-1:-1;6582:186:6;;;;;:::i;:::-;;:::i;:::-;;;1370:14:7;;1363:22;1345:41;;1333:2;1318:18;6582:186:6;1205:187:7;3869:165:6;;;;;;;;;;-1:-1:-1;5030:20:6;3869:165;;7065:330;;;;;;;;;;-1:-1:-1;7065:330:6;;;;;:::i;:::-;;:::i;7401:108::-;;;;;;;;;;-1:-1:-1;7401:108:6;;;;;:::i;:::-;-1:-1:-1;;;;;7487:15:6;7464:4;7487:15;;;:6;:15;;;;;;;;;7401:108;4040:148;;;;;;;;;;-1:-1:-1;4040:148:6;;5471:2;2252:36:7;;2240:2;2225:18;4040:148:6;2110:184:7;4991:59:6;;;;;;;;;;;;5030:20;4991:59;;5573:21;;;;;;;;;;-1:-1:-1;5573:21:6;;;;-1:-1:-1;;;;;5573:21:6;;;;;;-1:-1:-1;;;;;2463:32:7;;;2445:51;;2433:2;2418:18;5573:21:6;2299:203:7;9968:205:6;;;;;;;;;;-1:-1:-1;9968:205:6;;;;;:::i;:::-;;:::i;:::-;;4655:115;;;;;;;;;;-1:-1:-1;4655:115:6;;;;;:::i;:::-;-1:-1:-1;;;;;4747:16:6;4721:7;4747:16;;;:7;:16;;;;;;;4655:115;1824:101:0;;;;;;;;;;;;;:::i;4378:84:6:-;;;;;;;;;;-1:-1:-1;4422:7:6;1273:6:0;-1:-1:-1;;;;;1273:6:0;4378:84:6;;4194:88;;;;;;;;;;-1:-1:-1;4268:7:6;;;;;;;;;;;;-1:-1:-1;;;4268:7:6;;;;4194:88;;5479;;;;;;;;;;;;5525:42;5479:88;;6386:190;;;;;;;;;;-1:-1:-1;6386:190:6;;;;;:::i;:::-;;:::i;5295:27::-;;;;;;;;;;-1:-1:-1;5295:27:6;;;;-1:-1:-1;;;;;5295:27:6;;;5140:45;;;;;;;;;;;;5182:3;5140:45;;4468:181;;;;;;;;;;-1:-1:-1;4468:181:6;;;;;:::i;:::-;-1:-1:-1;;;;;4614:19:6;;;4584:7;4614:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;4468:181;5099:35;;;;;;;;;;;;5133:1;5099:35;;2074:198:0;;;;;;;;;;-1:-1:-1;2074:198:0;;;;;:::i;:::-;;:::i;6582:186:6:-;6683:4;6703:37;6712:10;6724:7;6733:6;6703:8;:37::i;:::-;-1:-1:-1;6757:4:6;6582:186;;;;;:::o;7065:330::-;-1:-1:-1;;;;;7215:19:6;;7195:4;7215:19;;;:11;:19;;;;;;;;7235:10;7215:31;;;;;;;;-1:-1:-1;;7215:52:6;7211:124;;-1:-1:-1;;;;;7283:19:6;;;;;;:11;:19;;;;;;;;7303:10;7283:31;;;;;;;:41;;7318:6;;7283:19;:41;;7318:6;;7283:41;:::i;:::-;;;;-1:-1:-1;;7211:124:6;7352:36;7362:6;7370:9;7381:6;7352:9;:36::i;:::-;7345:43;;7065:330;;;;;;:::o;9968:205::-;1094:13:0;:11;:13::i;:::-;10056:3:6::1;10046:6;:13;;10038:52;;;::::0;-1:-1:-1;;;10038:52:6;;3778:2:7;10038:52:6::1;::::0;::::1;3760:21:7::0;3817:2;3797:18;;;3790:30;3856:28;3836:18;;;3829:56;3902:18;;10038:52:6::1;;;;;;;;;10100:13;:22:::0;;;10137:29:::1;::::0;160:25:7;;;10137:29:6::1;::::0;148:2:7;133:18;10137:29:6::1;;;;;;;9968:205:::0;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;6386:190:6:-;6488:4;6508:40;6518:10;6530:9;6541:6;6508:9;:40::i;:::-;-1:-1:-1;6565:4:6;;6386:190;-1:-1:-1;;;6386:190:6:o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;4133:2:7;2154:73:0::1;::::0;::::1;4115:21:7::0;4172:2;4152:18;;;4145:30;4211:34;4191:18;;;4184:62;-1:-1:-1;;;4262:18:7;;;4255:36;4308:19;;2154:73:0::1;3931:402:7::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;6774:285:6:-;-1:-1:-1;;;;;6898:20:6;;6890:52;;;;-1:-1:-1;;;6890:52:6;;4540:2:7;6890:52:6;;;4522:21:7;4579:2;4559:18;;;4552:30;-1:-1:-1;;;4598:18:7;;;4591:49;4657:18;;6890:52:6;4338:343:7;6890:52:6;-1:-1:-1;;;;;6960:21:6;;6952:53;;;;-1:-1:-1;;;6952:53:6;;4540:2:7;6952:53:6;;;4522:21:7;4579:2;4559:18;;;4552:30;-1:-1:-1;;;4598:18:7;;;4591:49;4657:18;;6952:53:6;4338:343:7;6952:53:6;-1:-1:-1;;;;;7015:19:6;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:37;6774:285::o;7682:971::-;7791:4;7822;-1:-1:-1;;;;;7844:16:6;;7836:64;;;;-1:-1:-1;;;7836:64:6;;4888:2:7;7836:64:6;;;4870:21:7;4927:2;4907:18;;;4900:30;4966:34;4946:18;;;4939:62;-1:-1:-1;;;5017:18:7;;;5010:33;5060:19;;7836:64:6;4686:399:7;7836:64:6;-1:-1:-1;;;;;7918:18:6;;7910:68;;;;-1:-1:-1;;;7910:68:6;;5292:2:7;7910:68:6;;;5274:21:7;5331:2;5311:18;;;5304:30;5370:34;5350:18;;;5343:62;-1:-1:-1;;;5421:18:7;;;5414:35;5466:19;;7910:68:6;5090:401:7;7910:68:6;8005:1;7996:6;:10;7988:64;;;;-1:-1:-1;;;7988:64:6;;5698:2:7;7988:64:6;;;5680:21:7;5737:2;5717:18;;;5710:30;5776:34;5756:18;;;5749:62;-1:-1:-1;;;5827:18:7;;;5820:39;5876:19;;7988:64:6;5496:405:7;7988:64:6;8067:17;8075:4;8081:2;8067:7;:17::i;:::-;:28;;;;-1:-1:-1;8089:6:6;;-1:-1:-1;;;8089:6:6;;;;8088:7;8067:28;8063:237;;;8160:4;8111:28;4747:16;;;:7;:16;;;;;;8208:13;;8184:37;;8180:110;;8241:34;8254:20;8241:12;:34::i;:::-;8097:203;8063:237;-1:-1:-1;;;;;8314:12:6;;;;;;:6;:12;;;;;;;;;:26;;-1:-1:-1;;;;;;8330:10:6;;;;;;:6;:10;;;;;;;;8314:26;8310:72;;;-1:-1:-1;8366:5:6;8310:72;-1:-1:-1;;;;;8391:13:6;;;;;;:7;:13;;;;;:23;;8408:6;;8391:13;:23;;8408:6;;8391:23;:::i;:::-;;;;-1:-1:-1;8424:22:6;;-1:-1:-1;8450:7:6;8449:87;;8530:6;8449:87;;;8473:42;8483:4;8489:17;8497:4;8503:2;8489:7;:17::i;:::-;8508:6;8473:9;:42::i;:::-;-1:-1:-1;;;;;8546:11:6;;;;;;:7;:11;;;;;:29;;8424:112;;-1:-1:-1;8424:112:6;;8546:11;;;:29;;8424:112;;8546:29;:::i;:::-;;;;;;;;8605:2;-1:-1:-1;;;;;8590:34:6;8599:4;-1:-1:-1;;;;;8590:34:6;;8609:14;8590:34;;;;160:25:7;;148:2;133:18;;14:177;8590:34:6;;;;;;;;-1:-1:-1;8642:4:6;;7682:971;-1:-1:-1;;;;;7682:971:6:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:5;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6238:2:7;1414:68:0;;;6220:21:7;;;6257:18;;;6250:30;6316:34;6296:18;;;6289:62;6368:18;;1414:68:0;6036:356:7;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;7515:161:6:-;-1:-1:-1;;;;;7613:13:6;;7581:4;7613:13;;;:8;:13;;;;;;7581:4;;7613:13;;:31;;;;-1:-1:-1;;;;;;7631:13:6;;;;;;:8;:13;;;;;;;;7630:14;7613:31;7597:47;7515:161;-1:-1:-1;;;;7515:161:6:o;9133:829::-;5658:6;:13;;-1:-1:-1;;;;5658:13:6;-1:-1:-1;;;5658:13:6;;;9239:16:::1;::::0;;9253:1:::1;9239:16:::0;;;;;::::1;::::0;;-1:-1:-1;;9239:16:6::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;9239:16:6::1;9215:40;;9283:4;9265;9270:1;9265:7;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9265:23:6;;::::1;:7;::::0;;::::1;::::0;;;;;;:23;;;;9308:10:::1;::::0;:17:::1;::::0;;-1:-1:-1;;;9308:17:6;;;;:10;;;::::1;::::0;:15:::1;::::0;:17:::1;::::0;;::::1;::::0;9265:7;;9308:17;;;;;:10;:17:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9298:4;9303:1;9298:7;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9298:27:6;;::::1;:7;::::0;;::::1;::::0;;;;;;:27;;;;9373:4:::1;9353:26;::::0;;;:11:::1;:26:::0;;;;;;9388:10:::1;::::0;;;::::1;9353:47:::0;;;;;;;;-1:-1:-1;;9353:68:6::1;9336:188;;9466:4;9446:26;::::0;;;:11:::1;:26;::::0;;;;;;;9481:10:::1;::::0;-1:-1:-1;;;;;9481:10:6::1;9446:47:::0;;;;;;;-1:-1:-1;;9446:67:6;;9336:188:::1;9550:10;::::0;:218:::1;::::0;-1:-1:-1;;;9550:218:6;;-1:-1:-1;;;;;9550:10:6;;::::1;::::0;:61:::1;::::0;:218:::1;::::0;9629:20;;9550:10:::1;::::0;9686:4;;9716::::1;::::0;9739:15:::1;::::0;9550:218:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;9534:283;;9800:7;;;9534:283;9826:12;9853:21;:25:::0;9849:106:::1;;9906:10;::::0;:49:::1;::::0;-1:-1:-1;;;;;9906:10:6;;::::1;::::0;9929:21:::1;::::0;9906:49:::1;::::0;;;9929:21;9906:10;:49:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;9892:63:6;;-1:-1:-1;;9849:106:6::1;9205:757;;5681:1;-1:-1:-1::0;5692:6:6;:14;;-1:-1:-1;;;;5692:14:6;;;9133:829::o;8659:468::-;8769:7;;8813:25;;;;-1:-1:-1;5133:1:6;8813:25;8852:3;8859:1;8852:8;8848:27;;8869:6;8862:13;;;;;8848:27;8886:17;5182:3;8907:12;8916:3;8907:6;:12;:::i;:::-;8906:32;;;;:::i;:::-;8886:52;-1:-1:-1;8952:13:6;;8948:138;;8997:4;8981:22;;;;:7;:22;;;;;:35;;9007:9;;8981:22;:35;;9007:9;;8981:35;:::i;:::-;;;;-1:-1:-1;;9035:40:6;;160:25:7;;;9058:4:6;;-1:-1:-1;;;;;9035:40:6;;;;;148:2:7;133:18;9035:40:6;;;;;;;8948:138;9102:18;9111:9;9102:6;:18;:::i;:::-;9095:25;8659:468;-1:-1:-1;;;;;;8659:468:6:o;196:548:7:-;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;480:3;665:1;660:2;651:6;640:9;636:22;632:31;625:42;735:2;728;724:7;719:2;711:6;707:15;703:29;692:9;688:45;684:54;676:62;;;;196:548;;;;:::o;749:131::-;-1:-1:-1;;;;;824:31:7;;814:42;;804:70;;870:1;867;860:12;885:315;953:6;961;1014:2;1002:9;993:7;989:23;985:32;982:52;;;1030:1;1027;1020:12;982:52;1069:9;1056:23;1088:31;1113:5;1088:31;:::i;:::-;1138:5;1190:2;1175:18;;;;1162:32;;-1:-1:-1;;;885:315:7:o;1397:456::-;1474:6;1482;1490;1543:2;1531:9;1522:7;1518:23;1514:32;1511:52;;;1559:1;1556;1549:12;1511:52;1598:9;1585:23;1617:31;1642:5;1617:31;:::i;:::-;1667:5;-1:-1:-1;1724:2:7;1709:18;;1696:32;1737:33;1696:32;1737:33;:::i;:::-;1397:456;;1789:7;;-1:-1:-1;;;1843:2:7;1828:18;;;;1815:32;;1397:456::o;1858:247::-;1917:6;1970:2;1958:9;1949:7;1945:23;1941:32;1938:52;;;1986:1;1983;1976:12;1938:52;2025:9;2012:23;2044:31;2069:5;2044:31;:::i;2507:180::-;2566:6;2619:2;2607:9;2598:7;2594:23;2590:32;2587:52;;;2635:1;2632;2625:12;2587:52;-1:-1:-1;2658:23:7;;2507:180;-1:-1:-1;2507:180:7:o;2918:388::-;2986:6;2994;3047:2;3035:9;3026:7;3022:23;3018:32;3015:52;;;3063:1;3060;3053:12;3015:52;3102:9;3089:23;3121:31;3146:5;3121:31;:::i;:::-;3171:5;-1:-1:-1;3228:2:7;3213:18;;3200:32;3241:33;3200:32;3241:33;:::i;:::-;3293:7;3283:17;;;2918:388;;;;;:::o;3311:127::-;3372:10;3367:3;3363:20;3360:1;3353:31;3403:4;3400:1;3393:15;3427:4;3424:1;3417:15;3443:128;3510:9;;;3531:11;;;3528:37;;;3545:18;;:::i;5906:125::-;5971:9;;;5992:10;;;5989:36;;;6005:18;;:::i;6529:127::-;6590:10;6585:3;6581:20;6578:1;6571:31;6621:4;6618:1;6611:15;6645:4;6642:1;6635:15;6661:251;6731:6;6784:2;6772:9;6763:7;6759:23;6755:32;6752:52;;;6800:1;6797;6790:12;6752:52;6832:9;6826:16;6851:31;6876:5;6851:31;:::i;6917:980::-;7179:4;7227:3;7216:9;7212:19;7258:6;7247:9;7240:25;7284:2;7322:6;7317:2;7306:9;7302:18;7295:34;7365:3;7360:2;7349:9;7345:18;7338:31;7389:6;7424;7418:13;7455:6;7447;7440:22;7493:3;7482:9;7478:19;7471:26;;7532:2;7524:6;7520:15;7506:29;;7553:1;7563:195;7577:6;7574:1;7571:13;7563:195;;;7642:13;;-1:-1:-1;;;;;7638:39:7;7626:52;;7733:15;;;;7698:12;;;;7674:1;7592:9;7563:195;;;-1:-1:-1;;;;;;;7814:32:7;;;;7809:2;7794:18;;7787:60;-1:-1:-1;;;7878:3:7;7863:19;7856:35;7775:3;6917:980;-1:-1:-1;;;6917:980:7:o;8112:168::-;8185:9;;;8216;;8233:15;;;8227:22;;8213:37;8203:71;;8254:18;;:::i;8285:217::-;8325:1;8351;8341:132;;8395:10;8390:3;8386:20;8383:1;8376:31;8430:4;8427:1;8420:15;8458:4;8455:1;8448:15;8341:132;-1:-1:-1;8487:9:7;;8285:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "814400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEAD_WALLET()": "327",
								"_totalSupply()": "251",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22849",
								"balanceOf(address)": "2653",
								"changeThreshold(uint256)": "25690",
								"decimals()": "222",
								"fee_denominator()": "250",
								"getOwner()": "2376",
								"isNoFeeWallet(address)": "2566",
								"lpPair()": "2426",
								"name()": "infinite",
								"owner()": "2398",
								"renounceOwnership()": "infinite",
								"sellfee()": "294",
								"swapRouter()": "2381",
								"swapThreshold()": "2308",
								"symbol()": "infinite",
								"totalSupply()": "271",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"internalSwap(uint256)": "infinite",
								"is_sell(address,address)": "4452",
								"takeTaxes(address,bool,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3811,
									"end": 10175,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5087,
									"end": 5093,
									"name": "PUSH",
									"source": 6,
									"value": "7530"
								},
								{
									"begin": 5056,
									"end": 5093,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 5056,
									"end": 5093,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5192,
									"end": 5288,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 5192,
									"end": 5288,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5192,
									"end": 5288,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5192,
									"end": 5288,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5245,
									"end": 5287,
									"name": "PUSH",
									"source": 6,
									"value": "845D553BD206C5F1773C063B452D00AA942C3BEC"
								},
								{
									"begin": 5192,
									"end": 5288,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5192,
									"end": 5288,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5192,
									"end": 5288,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5762,
									"end": 6345,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 5762,
									"end": 6345,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5762,
									"end": 6345,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5762,
									"end": 6345,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5762,
									"end": 6345,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5762,
									"end": 6345,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5762,
									"end": 6345,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5762,
									"end": 6345,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 5762,
									"end": 6345,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5762,
									"end": 6345,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5793,
									"end": 5803,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5792,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5804,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5807,
									"end": 5811,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5811,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5836,
									"end": 5840,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5842,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5842,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5842,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5842,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5842,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5849,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5849,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5849,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5849,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5849,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5849,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5849,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5849,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5849,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5821,
									"end": 5849,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5860,
									"end": 5870,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 5860,
									"end": 5926,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5860,
									"end": 5926,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5860,
									"end": 5926,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5883,
									"end": 5925,
									"name": "PUSH",
									"source": 6,
									"value": "7A250D5630B4CF539739DF2C5DACB4C659F2488D"
								},
								{
									"begin": 5860,
									"end": 5926,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5860,
									"end": 5926,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5860,
									"end": 5926,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5955,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5955,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5955,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5943,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 5936,
									"end": 5955,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5955,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5955,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5955,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5955,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5030,
									"end": 5050,
									"name": "PUSH",
									"source": 6,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 5936,
									"end": 5970,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5970,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5970,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5936,
									"end": 5970,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 160,
									"end": 185,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 160,
									"end": 185,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 160,
									"end": 185,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "PUSH",
									"source": 6,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5985,
									"end": 6031,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6072,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 6062,
									"end": 6072,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6062,
									"end": 6072,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6072,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6072,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6072,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 6062,
									"end": 6072,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6072,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6072,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6062,
									"end": 6072,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6062,
									"end": 6080,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6080,
									"name": "PUSH",
									"source": 6,
									"value": "C45A0155"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 6062,
									"end": 6082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 6062,
									"end": 6082,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6051,
									"end": 6094,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6094,
									"name": "PUSH",
									"source": 6,
									"value": "C9C65396"
								},
								{
									"begin": 6108,
									"end": 6118,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 6108,
									"end": 6118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6108,
									"end": 6118,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6118,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6118,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6118,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 6108,
									"end": 6118,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6118,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6118,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6108,
									"end": 6118,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6108,
									"end": 6123,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6123,
									"name": "PUSH",
									"source": 6,
									"value": "AD5C4648"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 6108,
									"end": 6125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 6108,
									"end": 6125,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 721,
									"end": 736,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 721,
									"end": 736,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 721,
									"end": 736,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 703,
									"end": 737,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6147,
									"end": 6151,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 753,
									"end": 771,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 753,
									"end": 771,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 753,
									"end": 771,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 746,
									"end": 789,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "CALL",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 6051,
									"end": 6162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 6051,
									"end": 6162,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6162,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 6172,
									"end": 6188,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6172,
									"end": 6188,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6172,
									"end": 6188,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6172,
									"end": 6180,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 6172,
									"end": 6188,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6172,
									"end": 6188,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6172,
									"end": 6188,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6172,
									"end": 6188,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6172,
									"end": 6188,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 6172,
									"end": 6195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6172,
									"end": 6195,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6172,
									"end": 6195,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 6172,
									"end": 6195,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 6172,
									"end": 6195,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6172,
									"end": 6195,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6234,
									"end": 6244,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 6234,
									"end": 6244,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6265,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6205,
									"end": 6265,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6214,
									"end": 6224,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 6214,
									"end": 6224,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6234,
									"end": 6244,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6205,
									"end": 6213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 6205,
									"end": 6265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6265,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6205,
									"end": 6265,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6317,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 6307,
									"end": 6317,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6275,
									"end": 6338,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 6275,
									"end": 6338,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6317,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6275,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 6275,
									"end": 6338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6275,
									"end": 6338,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 6275,
									"end": 6338,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6774,
									"end": 7059,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 6774,
									"end": 7059,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6898,
									"end": 6918,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6898,
									"end": 6918,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1002,
									"end": 1004,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 984,
									"end": 1005,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1021,
									"end": 1039,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1021,
									"end": 1039,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1014,
									"end": 1044,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "45524332303A205A65726F2041646472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "68"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1053,
									"end": 1102,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1137,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1119,
									"end": 1137,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 6890,
									"end": 6942,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6960,
									"end": 6981,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6960,
									"end": 6981,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1002,
									"end": 1004,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 984,
									"end": 1005,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1021,
									"end": 1039,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1021,
									"end": 1039,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1014,
									"end": 1044,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "45524332303A205A65726F2041646472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "68"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1060,
									"end": 1078,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1053,
									"end": 1102,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1137,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1119,
									"end": 1137,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 1143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 6952,
									"end": 7005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7026,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7034,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7043,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7052,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6774,
									"end": 7059,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 486,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 196,
									"end": 486,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 266,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 307,
									"end": 316,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 298,
									"end": 305,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 294,
									"end": 317,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 290,
									"end": 322,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 287,
									"end": 339,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 287,
									"end": 339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 287,
									"end": 339,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 335,
									"end": 336,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 333,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 325,
									"end": 337,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 287,
									"end": 339,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 287,
									"end": 339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 361,
									"end": 377,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 361,
									"end": 377,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 406,
									"end": 437,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 406,
									"end": 437,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 396,
									"end": 438,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 396,
									"end": 438,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 386,
									"end": 456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 456,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 452,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 450,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 442,
									"end": 454,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 386,
									"end": 456,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 475,
									"end": 480,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 196,
									"end": 486,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 486,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 1143,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3811,
									"end": 10175,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c08a09101aa0a4b8f211ac0cb77e6e30d02998ff6254de63448ada24afc14e664736f6c63430008130033",
									".code": [
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "C31C9C07"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "DC9D75B0"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "E9451F5F"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "893D20E8"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "A01C3483"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "27889862"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "27889862"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "3EAAF86B"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "452ED4F1"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "694E80C3"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "445B667"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 10175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5093,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7329020B737B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4288,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6582,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6582,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1384,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1385,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1205,
											"end": 1392,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5030,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3869,
											"end": 4034,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7065,
											"end": 7395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 7065,
											"end": 7395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7401,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7464,
											"end": 7468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7493,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7502,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7509,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2252,
											"end": 2288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2288,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4040,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2110,
											"end": 2294,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 5030,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5050,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2496,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2496,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2299,
											"end": 2502,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9968,
											"end": 10173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 9968,
											"end": 10173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4655,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4754,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4770,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4422,
											"end": 4429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4378,
											"end": 4462,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "913D055"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4194,
											"end": 4282,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5525,
											"end": 5567,
											"name": "PUSH",
											"source": 6,
											"value": "DEAD"
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5567,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6386,
											"end": 6576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6386,
											"end": 6576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5322,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 5182,
											"end": 5185,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5185,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4468,
											"end": 4649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4625,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4649,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 5133,
											"end": 5134,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5134,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6703,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6724,
											"end": 6731,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6733,
											"end": 6739,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6703,
											"end": 6740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6740,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6703,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6757,
											"end": 6761,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7195,
											"end": 7199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7226,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7245,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7246,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7246,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7246,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7215,
											"end": 7267,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7211,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7211,
											"end": 7335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7294,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7313,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7314,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7314,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7314,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7314,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7324,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7324,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7324,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7283,
											"end": 7324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7324,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 7283,
											"end": 7324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7324,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7283,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7324,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7324,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7211,
											"end": 7335,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7211,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7352,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7362,
											"end": 7368,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7387,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7352,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7352,
											"end": 7388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7352,
											"end": 7388,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7352,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10056,
											"end": 10059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10046,
											"end": 10052,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10046,
											"end": 10059,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10046,
											"end": 10059,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10038,
											"end": 10090,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10038,
											"end": 10090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3778,
											"end": 3780,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10038,
											"end": 10090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 3797,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3797,
											"end": 3815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3820,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3856,
											"end": 3884,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206C6F776572206E6F742061636365707465642E000000000000"
										},
										{
											"begin": 3836,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3836,
											"end": 3854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3885,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10038,
											"end": 10090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10100,
											"end": 10113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10100,
											"end": 10122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10100,
											"end": 10122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10100,
											"end": 10122,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10137,
											"end": 10166,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10137,
											"end": 10166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2B7CE9CD4278161EEF9245955C9A851618488A07E830194C60A88F0224AD3CC0"
										},
										{
											"begin": 10137,
											"end": 10166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10137,
											"end": 10166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10137,
											"end": 10166,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10166,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10166,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10166,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10166,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6508,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6518,
											"end": 6528,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6539,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6547,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 6508,
											"end": 6548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6548,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6508,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6565,
											"end": 6569,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6565,
											"end": 6569,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6576,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4133,
											"end": 4135,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4175,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4245,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4246,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4262,
											"end": 4280,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4262,
											"end": 4280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4280,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4291,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4327,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4308,
											"end": 4327,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3931,
											"end": 4333,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 7059,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6774,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6898,
											"end": 6918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6898,
											"end": 6918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4542,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4543,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4552,
											"end": 4582,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45524332303A205A65726F2041646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4338,
											"end": 4681,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6890,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6960,
											"end": 6981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6981,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4542,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4543,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4552,
											"end": 4582,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45524332303A205A65726F2041646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4338,
											"end": 4681,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6952,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7026,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7043,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7052,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 7059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 8653,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7682,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7791,
											"end": 7795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7844,
											"end": 7860,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7844,
											"end": 7860,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4888,
											"end": 4890,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4927,
											"end": 4929,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4907,
											"end": 4925,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4907,
											"end": 4925,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4930,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5000,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 4946,
											"end": 4964,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4946,
											"end": 4964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4946,
											"end": 4964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4939,
											"end": 5001,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5017,
											"end": 5035,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5017,
											"end": 5035,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5017,
											"end": 5035,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5043,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5079,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5060,
											"end": 5079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4686,
											"end": 5085,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7836,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5294,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5295,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5333,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5404,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5405,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5414,
											"end": 5449,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5485,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5466,
											"end": 5485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5090,
											"end": 5491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7910,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8005,
											"end": 8006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7996,
											"end": 8002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7996,
											"end": 8006,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5739,
											"name": "PUSH",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 5740,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5810,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5749,
											"end": 5811,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5820,
											"end": 5859,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5496,
											"end": 5901,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7988,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8067,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 8075,
											"end": 8079,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8083,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8067,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8067,
											"end": 8084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8067,
											"end": 8084,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 8067,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8067,
											"end": 8095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8067,
											"end": 8095,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8067,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8067,
											"end": 8095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8089,
											"end": 8095,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8089,
											"end": 8095,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8089,
											"end": 8095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8089,
											"end": 8095,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8089,
											"end": 8095,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 8089,
											"end": 8095,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8095,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8067,
											"end": 8095,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8067,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8063,
											"end": 8300,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8063,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8063,
											"end": 8300,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8160,
											"end": 8164,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8111,
											"end": 8139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4754,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8221,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8208,
											"end": 8221,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8221,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 8180,
											"end": 8290,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8241,
											"end": 8275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 8254,
											"end": 8274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8241,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8241,
											"end": 8275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8241,
											"end": 8275,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 8241,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8063,
											"end": 8300,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8063,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8320,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8314,
											"end": 8340,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8336,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 8330,
											"end": 8340,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8340,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8314,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8382,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8310,
											"end": 8382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8382,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8310,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8398,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 8391,
											"end": 8414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8414,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8424,
											"end": 8446,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8424,
											"end": 8446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8449,
											"end": 8536,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8530,
											"end": 8536,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8449,
											"end": 8536,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8536,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8449,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8473,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8483,
											"end": 8487,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8489,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8497,
											"end": 8501,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8503,
											"end": 8505,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8489,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8489,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8489,
											"end": 8506,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8489,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8514,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8473,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8473,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8473,
											"end": 8515,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8473,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8553,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8424,
											"end": 8536,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8424,
											"end": 8536,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8424,
											"end": 8536,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8424,
											"end": 8536,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8424,
											"end": 8536,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8424,
											"end": 8536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8546,
											"end": 8575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8605,
											"end": 8607,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8599,
											"end": 8603,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8609,
											"end": 8623,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8624,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8642,
											"end": 8646,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8642,
											"end": 8646,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 8653,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7682,
											"end": 8653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6238,
											"end": 6240,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6220,
											"end": 6241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6220,
											"end": 6241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6275,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6257,
											"end": 6275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6250,
											"end": 6280,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6316,
											"end": 6350,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6296,
											"end": 6314,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6296,
											"end": 6314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6289,
											"end": 6351,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6036,
											"end": 6392,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7515,
											"end": 7676,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7515,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7621,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7644,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7613,
											"end": 7644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7639,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7644,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7613,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7597,
											"end": 7644,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7676,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7515,
											"end": 7676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9133,
											"end": 9962,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9133,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5664,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5671,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9253,
											"end": 9254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 9239,
											"end": 9255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9239,
											"end": 9255,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9255,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9287,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9269,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9270,
											"end": 9271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 9265,
											"end": 9272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9265,
											"end": 9288,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9288,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9288,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9308,
											"end": 9318,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9318,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9318,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9318,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9318,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 9308,
											"end": 9323,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9318,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 9308,
											"end": 9325,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 9308,
											"end": 9325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9303,
											"end": 9304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 9298,
											"end": 9305,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9298,
											"end": 9325,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9325,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9325,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9373,
											"end": 9377,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9353,
											"end": 9379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9379,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9353,
											"end": 9379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9379,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9388,
											"end": 9398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9388,
											"end": 9398,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9388,
											"end": 9398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9388,
											"end": 9398,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9388,
											"end": 9398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9400,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9353,
											"end": 9400,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9353,
											"end": 9421,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 9336,
											"end": 9524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9466,
											"end": 9470,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9446,
											"end": 9472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9481,
											"end": 9491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9481,
											"end": 9491,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9481,
											"end": 9491,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9493,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9493,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9446,
											"end": 9513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9513,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 9336,
											"end": 9524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9550,
											"end": 9560,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9550,
											"end": 9768,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "791AC947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9550,
											"end": 9768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9550,
											"end": 9560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "791AC947"
										},
										{
											"begin": 9550,
											"end": 9611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 9550,
											"end": 9768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9629,
											"end": 9649,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9629,
											"end": 9649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9686,
											"end": 9690,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9686,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9720,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9739,
											"end": 9754,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9739,
											"end": 9754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 9550,
											"end": 9768,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 9550,
											"end": 9768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9534,
											"end": 9817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 9534,
											"end": 9817,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 9807,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 9807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 9800,
											"end": 9807,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9534,
											"end": 9817,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 9534,
											"end": 9817,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9826,
											"end": 9838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9853,
											"end": 9874,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 9853,
											"end": 9878,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9849,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9849,
											"end": 9955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9906,
											"end": 9955,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9916,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9929,
											"end": 9950,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 9929,
											"end": 9950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9906,
											"end": 9955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9929,
											"end": 9950,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 9906,
											"end": 9955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9892,
											"end": 9955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9849,
											"end": 9955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9849,
											"end": 9955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9205,
											"end": 9962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9205,
											"end": 9962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5681,
											"end": 5682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5681,
											"end": 5682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5692,
											"end": 5698,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5692,
											"end": 5706,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5706,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5692,
											"end": 5706,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5706,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9133,
											"end": 9962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8659,
											"end": 9127,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8659,
											"end": 9127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8769,
											"end": 8776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8769,
											"end": 8776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8838,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8838,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 8813,
											"end": 8838,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5133,
											"end": 5134,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8813,
											"end": 8838,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 8813,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8859,
											"end": 8860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8860,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8848,
											"end": 8875,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 8862,
											"end": 8875,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 8875,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8848,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 8903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5185,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8907,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8916,
											"end": 8919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8913,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8907,
											"end": 8919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8919,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8907,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8906,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8906,
											"end": 8938,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8906,
											"end": 8938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8906,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8906,
											"end": 8938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8906,
											"end": 8938,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8906,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 8938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8952,
											"end": 8965,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8952,
											"end": 8965,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8948,
											"end": 9086,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9001,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9003,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8981,
											"end": 9003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 8988,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8981,
											"end": 9003,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 9003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9003,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8981,
											"end": 9003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9003,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9016,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9016,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9016,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9016,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8981,
											"end": 9016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9016,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8981,
											"end": 9016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9016,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8981,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9016,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9016,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9062,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9058,
											"end": 9062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9075,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 9086,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8948,
											"end": 9086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9111,
											"end": 9120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9108,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 9102,
											"end": 9120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9120,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9102,
											"end": 9120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9095,
											"end": 9120,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 8659,
											"end": 9127,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8659,
											"end": 9127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 196,
											"end": 744,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 196,
											"end": 744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 339,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 368,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 355,
											"end": 364,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 348,
											"end": 369,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 398,
											"end": 404,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 392,
											"end": 405,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 441,
											"end": 447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 436,
											"end": 438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 425,
											"end": 434,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 414,
											"end": 448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 466,
											"end": 467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 496,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 487,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 484,
											"end": 497,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 476,
											"end": 616,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 476,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 585,
											"end": 599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 581,
											"end": 604,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 581,
											"end": 604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 575,
											"end": 605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 551,
											"end": 568,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 551,
											"end": 568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 551,
											"end": 568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 570,
											"end": 572,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 540,
											"end": 606,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 505,
											"end": 515,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 505,
											"end": 515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 476,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 476,
											"end": 616,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 480,
											"end": 483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 665,
											"end": 666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 662,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 640,
											"end": 649,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 636,
											"end": 658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 632,
											"end": 663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 625,
											"end": 667,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 735,
											"end": 737,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 724,
											"end": 731,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 719,
											"end": 721,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 707,
											"end": 722,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 703,
											"end": 732,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 692,
											"end": 701,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 688,
											"end": 733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 684,
											"end": 738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 676,
											"end": 738,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 676,
											"end": 738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 676,
											"end": 738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 676,
											"end": 738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 744,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 196,
											"end": 744,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 749,
											"end": 880,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 749,
											"end": 880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 824,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 824,
											"end": 855,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 814,
											"end": 856,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 814,
											"end": 856,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 804,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 804,
											"end": 874,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 870,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 868,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 860,
											"end": 872,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 885,
											"end": 1200,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 885,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 953,
											"end": 959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1011,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1000,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 989,
											"end": 1012,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1017,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1034,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 982,
											"end": 1034,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1028,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1032,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 982,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1079,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1113,
											"end": 1118,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1088,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1119,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1088,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1143,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1194,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 885,
											"end": 1200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1853,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1397,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1496,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1545,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1540,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1529,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1541,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1546,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 1561,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1511,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1617,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1642,
											"end": 1647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1617,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1617,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1617,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1617,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1724,
											"end": 1726,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1728,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1696,
											"end": 1728,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1737,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1853,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1853,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1843,
											"end": 1845,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1846,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 1846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 1846,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 1846,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1847,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2105,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1858,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 1968,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1973,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1990,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1938,
											"end": 1990,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1990,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1938,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2069,
											"end": 2074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2044,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2687,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2507,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2607,
											"end": 2616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2594,
											"end": 2617,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2639,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2587,
											"end": 2639,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2636,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2625,
											"end": 2637,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2639,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2587,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2658,
											"end": 2681,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2507,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3306,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2918,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3049,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3033,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3045,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3065,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3112,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3146,
											"end": 3151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3121,
											"end": 3152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3176,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3228,
											"end": 3230,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3231,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3232,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3200,
											"end": 3232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3241,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3274,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3241,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3293,
											"end": 3300,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3300,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3306,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3306,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3438,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3311,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3372,
											"end": 3382,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3367,
											"end": 3370,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3361,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3384,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3407,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3393,
											"end": 3408,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3424,
											"end": 3425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3443,
											"end": 3571,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3443,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3519,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3542,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3565,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3528,
											"end": 3565,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3545,
											"end": 3563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5906,
											"end": 6031,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 5906,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5992,
											"end": 6002,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5992,
											"end": 6002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5992,
											"end": 6002,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 6025,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5989,
											"end": 6025,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6005,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6005,
											"end": 6023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6656,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6529,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6600,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6581,
											"end": 6601,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6602,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6621,
											"end": 6625,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6618,
											"end": 6619,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6611,
											"end": 6626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6649,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6650,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 6912,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6661,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6737,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6786,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6772,
											"end": 6781,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6763,
											"end": 6770,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6782,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6787,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6804,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6752,
											"end": 6804,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6790,
											"end": 6802,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6804,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6752,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6841,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6842,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6851,
											"end": 6882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7897,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 6917,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7179,
											"end": 7183,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7227,
											"end": 7230,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7212,
											"end": 7231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7258,
											"end": 7264,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7247,
											"end": 7256,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7265,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7284,
											"end": 7286,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7322,
											"end": 7328,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7315,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7329,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 7368,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 7360,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7349,
											"end": 7358,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7338,
											"end": 7369,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7389,
											"end": 7395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7430,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7461,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7447,
											"end": 7453,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7462,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7493,
											"end": 7496,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7471,
											"end": 7497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7471,
											"end": 7497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 7520,
											"end": 7535,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7506,
											"end": 7535,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7506,
											"end": 7535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7554,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7758,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 7563,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7571,
											"end": 7584,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7563,
											"end": 7758,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7563,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 7563,
											"end": 7758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7642,
											"end": 7655,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7642,
											"end": 7655,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7638,
											"end": 7677,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7678,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7748,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7748,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7748,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7710,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7675,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7592,
											"end": 7601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7563,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 7563,
											"end": 7758,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7563,
											"end": 7758,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 7563,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7814,
											"end": 7846,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7846,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7846,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7787,
											"end": 7847,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7878,
											"end": 7881,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7863,
											"end": 7882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7856,
											"end": 7891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 7778,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7897,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6917,
											"end": 7897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8112,
											"end": 8280,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8112,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8185,
											"end": 8194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8185,
											"end": 8194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8185,
											"end": 8194,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8216,
											"end": 8225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8216,
											"end": 8225,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8248,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8227,
											"end": 8249,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8227,
											"end": 8249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 8250,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8203,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 8203,
											"end": 8274,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 8254,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 8254,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8502,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8285,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8351,
											"end": 8352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8341,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 8341,
											"end": 8473,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8395,
											"end": 8405,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 8390,
											"end": 8393,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8386,
											"end": 8406,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8383,
											"end": 8384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8376,
											"end": 8407,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8420,
											"end": 8435,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8458,
											"end": 8462,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8455,
											"end": 8456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8463,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8341,
											"end": 8473,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 8341,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8487,
											"end": 8496,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8487,
											"end": 8496,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Copy_oatfinally.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEAD_WALLET()": "a01c3483",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"changeThreshold(uint256)": "694e80c3",
							"decimals()": "313ce567",
							"fee_denominator()": "dc9d75b0",
							"getOwner()": "893d20e8",
							"isNoFeeWallet(address)": "27889862",
							"lpPair()": "452ed4f1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sellfee()": "e9451f5f",
							"swapRouter()": "c31c9c07",
							"swapThreshold()": "0445b667",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateThresold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEAD_WALLET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee_denominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isNoFeeWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract IRouter02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Copy_oatfinally.sol\":\"OneAnonataTime\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Copy_oatfinally.sol\":{\"keccak256\":\"0x561d3ab9a5cda45eef8a8ef839301aaba8daaa591c06c6ffd1b3f044fcda671a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6192ad08a23ed4741310d5874f14d0086238b7baa87a94b5abd346357ae235\",\"dweb:/ipfs/QmcK3Ag6tqAfkMTixzqNzt5pY7diR5CBXfMt1kYk1Qt82w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Copy_oatfinally.sol:OneAnonataTime",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1178,
								"contract": "contracts/Copy_oatfinally.sol:OneAnonataTime",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1182,
								"contract": "contracts/Copy_oatfinally.sol:OneAnonataTime",
								"label": "_noFee",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1186,
								"contract": "contracts/Copy_oatfinally.sol:OneAnonataTime",
								"label": "isLpPair",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1190,
								"contract": "contracts/Copy_oatfinally.sol:OneAnonataTime",
								"label": "balance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1200,
								"contract": "contracts/Copy_oatfinally.sol:OneAnonataTime",
								"label": "swapThreshold",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1212,
								"contract": "contracts/Copy_oatfinally.sol:OneAnonataTime",
								"label": "oatAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address_payable"
							},
							{
								"astId": 1215,
								"contract": "contracts/Copy_oatfinally.sol:OneAnonataTime",
								"label": "swapRouter",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IRouter02)1078"
							},
							{
								"astId": 1229,
								"contract": "contracts/Copy_oatfinally.sol:OneAnonataTime",
								"label": "lpPair",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1231,
								"contract": "contracts/Copy_oatfinally.sol:OneAnonataTime",
								"label": "inSwap",
								"offset": 20,
								"slot": "8",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IRouter02)1078": {
								"encoding": "inplace",
								"label": "contract IRouter02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							889
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 890,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								889
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 177,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 177,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 177,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 177,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 177,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 177,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 171,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 172,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 174,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 177,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "888:2238:1",
							"usedErrors": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							889
						],
						"ERC20": [
							764
						],
						"IERC20": [
							842
						],
						"IERC20Metadata": [
							867
						]
					},
					"id": 765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 765,
							"sourceUnit": 843,
							"src": "130:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 765,
							"sourceUnit": 868,
							"src": "153:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 765,
							"sourceUnit": 890,
							"src": "195:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 184,
										"name": "Context",
										"nameLocations": [
											"1550:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "1550:7:2"
									},
									"id": 185,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:2"
								},
								{
									"baseName": {
										"id": 186,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 842,
										"src": "1559:6:2"
									},
									"id": 187,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:2"
								},
								{
									"baseName": {
										"id": 188,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 867,
										"src": "1567:14:2"
									},
									"id": 189,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 183,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 764,
							"linearizedBaseContracts": [
								764,
								867,
								842,
								889
							],
							"name": "ERC20",
							"nameLocation": "1541:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 193,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "1588:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 192,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 190,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 191,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 199,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "1640:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 198,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 194,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 197,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 195,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 196,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "1714:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 200,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "1749:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 202,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "1775:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 204,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2036:57:2",
										"statements": [
											{
												"expression": {
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 213,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2046:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 214,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2054:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:2"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2069:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "2079:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:2"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 222,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1992:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2013:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 209,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:2"
									},
									"scope": 764,
									"src": "1980:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2227:29:2",
										"statements": [
											{
												"expression": {
													"id": 229,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2244:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 228,
												"id": 230,
												"nodeType": "Return",
												"src": "2237:12:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 225,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:2"
									},
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2212:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:2"
									},
									"scope": 764,
									"src": "2158:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										860
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2440:31:2",
										"statements": [
											{
												"expression": {
													"id": 239,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 205,
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 238,
												"id": 240,
												"nodeType": "Return",
												"src": "2450:14:2"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:2"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:2"
									},
									"scope": 764,
									"src": "2369:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										866
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3169:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "3179:9:2"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:2"
									},
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3162:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 246,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:2"
									},
									"scope": 764,
									"src": "3104:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										791
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "3325:36:2",
										"statements": [
											{
												"expression": {
													"id": 259,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 201,
													"src": "3342:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 258,
												"id": 260,
												"nodeType": "Return",
												"src": "3335:19:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 255,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:2"
									},
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:2"
									},
									"scope": 764,
									"src": "3255:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										799
									],
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "3502:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 271,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3519:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 273,
													"indexExpression": {
														"id": 272,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "3529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 274,
												"nodeType": "Return",
												"src": "3512:25:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:2"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "3438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "3493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:2"
									},
									"scope": 764,
									"src": "3419:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										809
									],
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3825:104:2",
										"statements": [
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "3835:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 287,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 289,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "3851:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "3883:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 294,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "3890:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "3894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 292,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3873:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 286,
												"id": 299,
												"nodeType": "Return",
												"src": "3911:11:2"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 283,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:2"
									},
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3819:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:2"
									},
									"scope": 764,
									"src": "3740:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										819
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "4085:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 312,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "4102:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 314,
														"indexExpression": {
															"id": 313,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "4114:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "4121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 311,
												"id": 317,
												"nodeType": "Return",
												"src": "4095:34:2"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 308,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:2"
									},
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4021:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4076:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:2"
									},
									"scope": 764,
									"src": "3987:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										829
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "4533:108:2",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "4543:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 330,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 332,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "4559:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4590:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "4597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "4606:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "4581:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 329,
												"id": 342,
												"nodeType": "Return",
												"src": "4623:11:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 326,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:2"
									},
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4461:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4527:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:2"
									},
									"scope": 764,
									"src": "4444:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										841
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "5306:153:2",
										"statements": [
											{
												"assignments": [
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "5316:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 357,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 359,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "5334:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 363,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5372:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5387:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "5356:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5414:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "5420:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5424:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "5404:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 356,
												"id": 375,
												"nodeType": "Return",
												"src": "5441:11:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 353,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:2"
									},
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5225:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5239:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5251:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:2"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:2"
									},
									"scope": 764,
									"src": "5203:256:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "5948:140:2",
										"statements": [
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 405,
														"src": "5958:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 387,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 389,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "5974:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 393,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "6005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 396,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "6031:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 397,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "6038:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 395,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "6021:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 399,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "6049:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "5996:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 386,
												"id": 404,
												"nodeType": "Return",
												"src": "6070:11:2"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5881:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5898:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5942:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:2"
									},
									"scope": 764,
									"src": "5854:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "6674:328:2",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "6684:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 416,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "6700:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:2"
											},
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "6722:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 421,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"arguments": [
														{
															"id": 424,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6759:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "6766:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 423,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "6749:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 429,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "6792:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 430,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "6812:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:2"
											},
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 436,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6912:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 437,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6919:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 438,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "6928:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 439,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "6947:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 435,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "6903:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 442,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 415,
												"id": 445,
												"nodeType": "Return",
												"src": "6984:11:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6619:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:2"
									},
									"scope": 764,
									"src": "6575:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7534:710:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 458,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7552:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 459,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "7630:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "7718:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "7724:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 480,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "7728:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "7697:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:2"
											},
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "7746:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"baseExpression": {
														"id": 485,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "7768:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 487,
													"indexExpression": {
														"id": 486,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "7778:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 490,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "7801:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 491,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "7816:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:2"
											},
											{
												"id": 510,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:2",
												"statements": [
													{
														"expression": {
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 496,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "7899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 498,
																"indexExpression": {
																	"id": 497,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "7909:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 499,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "7917:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 500,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "7931:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 503,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:2"
													},
													{
														"expression": {
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 504,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "8114:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 506,
																"indexExpression": {
																	"id": 505,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "8124:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 507,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "8131:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 509,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 512,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "8172:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8178:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8182:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "8163:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "EmitStatement",
												"src": "8158:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "8220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8230:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "8200:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:2"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7475:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7489:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:2"
									},
									"scope": 764,
									"src": "7456:788:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "8585:470:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "8603:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 534,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 543,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8713:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 542,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "8671:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:2"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 551,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "8731:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 552,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "8747:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:2"
											},
											{
												"id": 561,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:2",
												"statements": [
													{
														"expression": {
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 555,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "8899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 557,
																"indexExpression": {
																	"id": 556,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "8909:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 558,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "8921:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 560,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 563,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8982:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "8952:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "8947:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 572,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9041:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9000:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:2"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8535:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8552:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:2"
									},
									"scope": 764,
									"src": "8520:535:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "9440:594:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 590,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "9458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 591,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9549:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9570:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "9528:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:2"
											},
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "9588:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"baseExpression": {
														"id": 610,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "9613:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 612,
													"indexExpression": {
														"id": 611,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9623:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 615,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "9649:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 616,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "9667:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:2"
											},
											{
												"id": 633,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:2",
												"statements": [
													{
														"expression": {
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 621,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "9746:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 623,
																"indexExpression": {
																	"id": 622,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "9756:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 624,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "9767:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 625,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "9784:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 628,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:2"
													},
													{
														"expression": {
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 629,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "9883:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 630,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "9899:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 632,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9961:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "9931:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "EmitStatement",
												"src": "9926:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9999:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10020:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9979:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:2"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "9390:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "9407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:2"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:2"
									},
									"scope": 764,
									"src": "9375:659:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "10540:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 664,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "10558:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 665,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "10636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 675,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:2"
											},
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 683,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "10707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 686,
															"indexExpression": {
																"id": 684,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "10719:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 687,
														"indexExpression": {
															"id": 685,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "10726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 688,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "10737:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 692,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "10767:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "10774:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "10783:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 691,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "10758:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "EmitStatement",
												"src": "10753:37:2"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "10475:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "10490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "10507:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:2"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:2"
									},
									"scope": 764,
									"src": "10457:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "11168:321:2",
										"statements": [
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 740,
														"src": "11178:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"arguments": [
														{
															"id": 711,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "11215:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "11222:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 710,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "11205:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "11244:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 717,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 716,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 739,
												"nodeType": "IfStatement",
												"src": "11240:243:2",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "11283:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 723,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "11305:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 724,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "11325:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 722,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 728,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:2"
														},
														{
															"id": 737,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "11416:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 731,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 703,
																				"src": "11423:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 732,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "11432:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 733,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 705,
																					"src": "11451:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 698,
																			"src": "11407:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 736,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "11103:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "11118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "11135:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:2"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:2"
									},
									"scope": 764,
									"src": "11078:411:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "12162:2:2",
										"statements": []
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "12103:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "12117:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "12129:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:2"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:2"
									},
									"scope": 764,
									"src": "12073:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "12840:2:2",
										"statements": []
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "12781:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "12795:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "12807:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:2"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:2"
									},
									"scope": 764,
									"src": "12752:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 765,
							"src": "1532:11312:2",
							"usedErrors": []
						}
					],
					"src": "105:12740:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							842
						]
					},
					"id": 843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 766,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 767,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 842,
							"linearizedBaseContracts": [
								842
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 776,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 785,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 842,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 842,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 842,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 842,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 842,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 842,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 843,
							"src": "202:2534:3",
							"usedErrors": []
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							842
						],
						"IERC20Metadata": [
							867
						]
					},
					"id": 868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 844,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 868,
							"sourceUnit": 843,
							"src": "135:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 847,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 842,
										"src": "305:6:4"
									},
									"id": 848,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 846,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 867,
							"linearizedBaseContracts": [
								867,
								842
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 851,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 867,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 867,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 863,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 867,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 868,
							"src": "277:405:4",
							"usedErrors": []
						}
					],
					"src": "110:573:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							889
						]
					},
					"id": 890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 870,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 889,
							"linearizedBaseContracts": [
								889
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 875,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 874,
												"id": 877,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 889,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 884,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 883,
												"id": 886,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 889,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 890,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"contracts/Copy_oatfinally.sol": {
				"ast": {
					"absolutePath": "contracts/Copy_oatfinally.sol",
					"exportedSymbols": {
						"Context": [
							889
						],
						"ERC20": [
							764
						],
						"IERC20": [
							842
						],
						"IERC20Metadata": [
							867
						],
						"IFactoryV2": [
							924
						],
						"IRouter01": [
							1018
						],
						"IRouter02": [
							1078
						],
						"OneAnonataTime": [
							1824
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							177
						]
					},
					"id": 1825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 891,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "908:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1825,
							"sourceUnit": 113,
							"src": "933:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1825,
							"sourceUnit": 765,
							"src": "986:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1825,
							"sourceUnit": 113,
							"src": "1042:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1825,
							"sourceUnit": 178,
							"src": "1095:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFactoryV2",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 924,
							"linearizedBaseContracts": [
								924
							],
							"name": "IFactoryV2",
							"nameLocation": "1169:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 905,
									"name": "PairCreated",
									"nameLocation": "1192:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1229:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1213:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1261:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1245:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpPair",
												"nameLocation": "1285:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1277:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1301:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:111:6"
									},
									"src": "1186:129:6"
								},
								{
									"functionSelector": "e6a43905",
									"id": 914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "1330:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1346:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "1338:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1362:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "1354:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:32:6"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "lpPair",
												"nameLocation": "1425:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "1417:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1416:16:6"
									},
									"scope": 924,
									"src": "1321:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "1448:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1467:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "1459:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1483:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "1475:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:32:6"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "lpPair",
												"nameLocation": "1533:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "1525:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1524:16:6"
									},
									"scope": 924,
									"src": "1439:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1825,
							"src": "1159:384:6",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRouter01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1018,
							"linearizedBaseContracts": [
								1018
							],
							"name": "IRouter01",
							"nameLocation": "1555:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1580:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1587:2:6"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1613:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:9:6"
									},
									"scope": 1018,
									"src": "1571:51:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "1637:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1641:2:6"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1667:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1666:9:6"
									},
									"scope": 1018,
									"src": "1628:48:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "1691:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1724:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1716:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "1747:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1739:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1783:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1775:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1815:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1807:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1845:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1837:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1865:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1857:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:173:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1951:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1943:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1984:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1976:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2015:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "2007:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:105:6"
									},
									"scope": 1018,
									"src": "1682:353:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2050:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2080:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2072:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2072:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2104:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2096:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "2128:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2120:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "2160:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2152:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2152:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "2192:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2184:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "2220:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2212:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2248:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2240:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2268:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2260:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2260:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2062:220:6"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2338:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2330:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "2367:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2359:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2396:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2388:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2316:99:6"
									},
									"scope": 1018,
									"src": "2041:375:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 995,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2431:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2470:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2462:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2511:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2492:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 983,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2492:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 984,
													"nodeType": "ArrayTypeName",
													"src": "2492:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2533:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2525:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2553:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2545:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2452:115:6"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2611:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2594:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 991,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2594:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 992,
													"nodeType": "ArrayTypeName",
													"src": "2594:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2593:26:6"
									},
									"scope": 1018,
									"src": "2422:198:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1006,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "2635:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2657:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2649:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2686:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2667:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 998,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2667:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 999,
													"nodeType": "ArrayTypeName",
													"src": "2667:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:43:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2756:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2739:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1002,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2739:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1003,
													"nodeType": "ArrayTypeName",
													"src": "2739:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:26:6"
									},
									"scope": 1018,
									"src": "2626:139:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "2780:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2801:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2793:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2793:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2831:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2812:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1009,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2812:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1010,
													"nodeType": "ArrayTypeName",
													"src": "2812:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2792:44:6"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2901:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2884:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1013,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2884:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1014,
													"nodeType": "ArrayTypeName",
													"src": "2884:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2883:26:6"
									},
									"scope": 1018,
									"src": "2771:139:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1825,
							"src": "1545:1367:6",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1019,
										"name": "IRouter01",
										"nameLocations": [
											"2937:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1018,
										"src": "2937:9:6"
									},
									"id": 1020,
									"nodeType": "InheritanceSpecifier",
									"src": "2937:9:6"
								}
							],
							"canonicalName": "IRouter02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1078,
							"linearizedBaseContracts": [
								1078,
								1018
							],
							"name": "IRouter02",
							"nameLocation": "2924:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "791ac947",
									"id": 1034,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "2962:50:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3030:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3022:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "3056:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3048:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3048:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3097:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3078:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1025,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3078:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1026,
													"nodeType": "ArrayTypeName",
													"src": "3078:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3119:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3111:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3139:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3131:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:141:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3162:0:6"
									},
									"scope": 1078,
									"src": "2953:210:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "3178:50:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "3246:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "3238:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3287:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "3268:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1037,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3268:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1038,
													"nodeType": "ArrayTypeName",
													"src": "3268:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3309:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "3301:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3329:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "3321:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3228:115:6"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3360:0:6"
									},
									"scope": 1078,
									"src": "3169:192:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "3376:53:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3447:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "3439:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3439:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "3473:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "3465:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3465:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3514:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "3495:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1051,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3495:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1052,
													"nodeType": "ArrayTypeName",
													"src": "3495:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3536:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "3528:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3528:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3556:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "3548:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:141:6"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3579:0:6"
									},
									"scope": 1078,
									"src": "3367:213:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "3595:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3637:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "3629:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "3663:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "3655:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3704:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "3685:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1065,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3685:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1066,
													"nodeType": "ArrayTypeName",
													"src": "3685:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3726:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "3718:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3718:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3746:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "3738:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3619:141:6"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3796:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "3779:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1073,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3779:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1074,
													"nodeType": "ArrayTypeName",
													"src": "3779:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3778:26:6"
									},
									"scope": 1078,
									"src": "3586:219:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1825,
							"src": "2914:893:6",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1079,
										"name": "Context",
										"nameLocations": [
											"3838:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "3838:7:6"
									},
									"id": 1080,
									"nodeType": "InheritanceSpecifier",
									"src": "3838:7:6"
								},
								{
									"baseName": {
										"id": 1081,
										"name": "Ownable",
										"nameLocations": [
											"3847:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "3847:7:6"
									},
									"id": 1082,
									"nodeType": "InheritanceSpecifier",
									"src": "3847:7:6"
								},
								{
									"baseName": {
										"id": 1083,
										"name": "IERC20",
										"nameLocations": [
											"3856:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 842,
										"src": "3856:6:6"
									},
									"id": 1084,
									"nodeType": "InheritanceSpecifier",
									"src": "3856:6:6"
								}
							],
							"canonicalName": "OneAnonataTime",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1824,
							"linearizedBaseContracts": [
								1824,
								842,
								112,
								889
							],
							"name": "OneAnonataTime",
							"nameLocation": "3820:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										791
									],
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "3933:101:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1090,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "3947:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3963:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3947:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1097,
												"nodeType": "IfStatement",
												"src": "3943:56:6",
												"trueBody": {
													"id": 1096,
													"nodeType": "Block",
													"src": "3966:33:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1093,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3980:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3980:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1095,
															"nodeType": "ExpressionStatement",
															"src": "3980:8:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1098,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1197,
													"src": "4015:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1089,
												"id": 1099,
												"nodeType": "Return",
												"src": "4008:19:6"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3878:11:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1086,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3906:8:6"
									},
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3889:2:6"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "3924:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:9:6"
									},
									"scope": 1824,
									"src": "3869:165:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "4090:98:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "4104:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4120:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4104:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1113,
												"nodeType": "IfStatement",
												"src": "4100:56:6",
												"trueBody": {
													"id": 1112,
													"nodeType": "Block",
													"src": "4123:33:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1109,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "4137:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4137:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1111,
															"nodeType": "ExpressionStatement",
															"src": "4137:8:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1114,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1224,
													"src": "4172:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1105,
												"id": 1115,
												"nodeType": "Return",
												"src": "4165:16:6"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4049:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4057:2:6"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "4083:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1103,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4083:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:7:6"
									},
									"scope": 1824,
									"src": "4040:148:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "4251:31:6",
										"statements": [
											{
												"expression": {
													"id": 1122,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1221,
													"src": "4268:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1123,
												"nodeType": "Return",
												"src": "4261:14:6"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4203:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4209:2:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "4236:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1119,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4236:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:15:6"
									},
									"scope": 1824,
									"src": "4194:88:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "4343:29:6",
										"statements": [
											{
												"expression": {
													"id": 1130,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1218,
													"src": "4360:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1131,
												"nodeType": "Return",
												"src": "4353:12:6"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4297:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4301:2:6"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "4328:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1127,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4328:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:15:6"
									},
									"scope": 1824,
									"src": "4288:84:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "4431:31:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1138,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "4448:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4448:7:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1137,
												"id": 1140,
												"nodeType": "Return",
												"src": "4441:14:6"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "4387:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4395:2:6"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4422:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4422:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:9:6"
									},
									"scope": 1824,
									"src": "4378:84:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										819
									],
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "4597:52:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1152,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "4614:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1154,
														"indexExpression": {
															"id": 1153,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "4626:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4614:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1156,
													"indexExpression": {
														"id": 1155,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4634:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4614:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1157,
												"nodeType": "Return",
												"src": "4607:35:6"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4477:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4558:8:6"
									},
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "4495:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4487:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4487:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4511:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4503:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4503:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:33:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4584:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4584:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4583:9:6"
									},
									"scope": 1824,
									"src": "4468:181:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										799
									],
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "4730:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1167,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "4747:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1169,
													"indexExpression": {
														"id": 1168,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "4755:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4747:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1170,
												"nodeType": "Return",
												"src": "4740:23:6"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4664:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1163,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4703:8:6"
									},
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4682:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4674:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4673:17:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4721:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4721:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4720:9:6"
									},
									"scope": 1824,
									"src": "4655:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1178,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "4832:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "4776:67:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1177,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4784:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4776:47:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1176,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4803:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4795:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4814:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1182,
									"mutability": "mutable",
									"name": "_noFee",
									"nameLocation": "4882:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "4849:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1181,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4857:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4849:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1180,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4868:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1186,
									"mutability": "mutable",
									"name": "isLpPair",
									"nameLocation": "4927:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "4894:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1185,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1183,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4902:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4894:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1184,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4913:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1190,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "4977:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "4941:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1189,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1187,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4949:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4941:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1188,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4960:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "3eaaf86b",
									"id": 1197,
									"mutability": "constant",
									"name": "_totalSupply",
									"nameLocation": "5015:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "4991:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4991:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"id": 1196,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130305f3030305f303030",
											"id": 1192,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5030:11:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000_by_1",
												"typeString": "int_const 100000000"
											},
											"value": "100_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1195,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1193,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5044:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1194,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5048:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "5044:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "5030:20:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0445b667",
									"id": 1200,
									"mutability": "mutable",
									"name": "swapThreshold",
									"nameLocation": "5071:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5056:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5056:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33305f303030",
										"id": 1199,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5087:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30000_by_1",
											"typeString": "int_const 30000"
										},
										"value": "30_000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e9451f5f",
									"id": 1203,
									"mutability": "constant",
									"name": "sellfee",
									"nameLocation": "5123:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5099:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1201,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5099:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5133:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "dc9d75b0",
									"id": 1206,
									"mutability": "constant",
									"name": "fee_denominator",
									"nameLocation": "5164:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5140:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5140:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5182:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1212,
									"mutability": "mutable",
									"name": "oatAddress",
									"nameLocation": "5216:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5192:96:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1207,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5192:15:6",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307838343564353533424432303663356631373733633036336234353244303041613934326333424543",
												"id": 1210,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5245:42:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x845d553BD206c5f1773c063b452D00Aa942c3BEC"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1209,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "5237:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 1208,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5237:8:6",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 1211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5237:51:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 1215,
									"mutability": "mutable",
									"name": "swapRouter",
									"nameLocation": "5312:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5295:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRouter02_$1078",
										"typeString": "contract IRouter02"
									},
									"typeName": {
										"id": 1214,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1213,
											"name": "IRouter02",
											"nameLocations": [
												"5295:9:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1078,
											"src": "5295:9:6"
										},
										"referencedDeclaration": 1078,
										"src": "5295:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRouter02_$1078",
											"typeString": "contract IRouter02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1218,
									"mutability": "constant",
									"name": "_name",
									"nameLocation": "5352:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5328:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1216,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5328:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4f6e6520416e6f6e",
										"id": 1217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "unicodeString",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5360:17:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e4bc778218d265bb88aa62ce4b475adebe5b4ab100576ce7e7eb58811e6bf38e",
											"typeString": "literal_string \"One Anon\""
										},
										"value": "One Anon"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1221,
									"mutability": "constant",
									"name": "_symbol",
									"nameLocation": "5407:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5383:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1219,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5383:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "244f4154",
										"id": 1220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "unicodeString",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5417:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5cc47944953b16f42d78b2a5c55ae8f1babf8caeea8aa038b107e35289405b37",
											"typeString": "literal_string \"$OAT\""
										},
										"value": "$OAT"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1224,
									"mutability": "constant",
									"name": "_decimals",
									"nameLocation": "5459:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5436:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1222,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5436:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 1223,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5471:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a01c3483",
									"id": 1227,
									"mutability": "constant",
									"name": "DEAD_WALLET",
									"nameLocation": "5503:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5479:88:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1225,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5479:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 1226,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5525:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "452ed4f1",
									"id": 1229,
									"mutability": "mutable",
									"name": "lpPair",
									"nameLocation": "5588:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5573:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1228,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5573:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1231,
									"mutability": "mutable",
									"name": "inSwap",
									"nameLocation": "5613:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1824,
									"src": "5600:19:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1230,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "5600:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "5648:65:6",
										"statements": [
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1233,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "5658:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5667:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5658:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "5658:13:6"
											},
											{
												"id": 1237,
												"nodeType": "PlaceholderStatement",
												"src": "5681:1:6"
											},
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1238,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "5692:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5701:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5692:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "5692:14:6"
											}
										]
									},
									"id": 1243,
									"name": "inSwapFlag",
									"nameLocation": "5635:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5645:2:6"
									},
									"src": "5626:87:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "2b7ce9cd4278161eef9245955c9a851618488a07e830194c60a88f0224ad3cc0",
									"id": 1247,
									"name": "updateThresold",
									"nameLocation": "5725:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5748:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5740:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:16:6"
									},
									"src": "5719:37:6"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "5776:569:6",
										"statements": [
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1250,
															"name": "_noFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "5786:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1253,
														"indexExpression": {
															"expression": {
																"id": 1251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5793:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5797:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5793:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5786:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5807:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5786:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "5786:25:6"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1257,
															"name": "_noFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "5821:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1262,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1260,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5836:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																		"typeString": "contract OneAnonataTime"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																		"typeString": "contract OneAnonataTime"
																	}
																],
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5828:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1258,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5828:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5828:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5821:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5845:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5821:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "5821:28:6"
											},
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1266,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "5860:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRouter02_$1078",
															"typeString": "contract IRouter02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5883:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1267,
															"name": "IRouter02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "5873:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IRouter02_$1078_$",
																"typeString": "type(contract IRouter02)"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5873:53:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRouter02_$1078",
															"typeString": "contract IRouter02"
														}
													},
													"src": "5860:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRouter02_$1078",
														"typeString": "contract IRouter02"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "5860:66:6"
											},
											{
												"expression": {
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1272,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "5936:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1275,
														"indexExpression": {
															"expression": {
																"id": 1273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5944:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5948:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5944:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5936:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1276,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "5958:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5936:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "5936:34:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6002:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5994:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1280,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5994:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5994:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1284,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6006:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6010:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6006:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1286,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "6018:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1279,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "5985:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5985:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "EmitStatement",
												"src": "5980:51:6"
											},
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1289,
														"name": "lpPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "6042:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1296,
																		"name": "swapRouter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "6108:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IRouter02_$1078",
																			"typeString": "contract IRouter02"
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6119:4:6",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 934,
																	"src": "6108:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6108:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1301,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6147:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																			"typeString": "contract OneAnonataTime"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																			"typeString": "contract OneAnonataTime"
																		}
																	],
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6139:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1299,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6139:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6139:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1291,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1215,
																				"src": "6062:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IRouter02_$1078",
																					"typeString": "contract IRouter02"
																				}
																			},
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6073:7:6",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 929,
																			"src": "6062:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6062:20:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1290,
																	"name": "IFactoryV2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "6051:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IFactoryV2_$924_$",
																		"typeString": "type(contract IFactoryV2)"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6051:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFactoryV2_$924",
																	"typeString": "contract IFactoryV2"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6084:10:6",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 923,
															"src": "6051:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6051:111:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6042:120:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "6042:120:6"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1306,
															"name": "isLpPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "6172:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1308,
														"indexExpression": {
															"id": 1307,
															"name": "lpPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "6181:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6172:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6191:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6172:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "6172:23:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1313,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6214:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6218:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6214:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1317,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "6234:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IRouter02_$1078",
																		"typeString": "contract IRouter02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IRouter02_$1078",
																		"typeString": "contract IRouter02"
																	}
																],
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6226:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1315,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6226:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6226:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6252:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1320,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6252:7:6",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1319,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "6247:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6247:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6261:3:6",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "6247:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1312,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "6205:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6205:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "6205:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1329,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6292:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																		"typeString": "contract OneAnonataTime"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																		"typeString": "contract OneAnonataTime"
																	}
																],
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6284:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1327,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6284:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6284:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1333,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "6307:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IRouter02_$1078",
																		"typeString": "contract IRouter02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IRouter02_$1078",
																		"typeString": "contract IRouter02"
																	}
																],
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6299:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1331,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6299:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6299:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6325:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1336,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6325:7:6",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1335,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "6320:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6320:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6334:3:6",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "6320:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "6275:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6275:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "6275:63:6"
											}
										]
									},
									"id": 1343,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5773:2:6"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5776:0:6"
									},
									"scope": 1824,
									"src": "5762:583:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "6378:2:6",
										"statements": []
									},
									"id": 1347,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6358:2:6"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6378:0:6"
									},
									"scope": 1824,
									"src": "6351:29:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										809
									],
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "6498:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6518:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6522:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6518:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "6530:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1361,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "6541:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1357,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "6508:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6508:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "6508:40:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6565:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1356,
												"id": 1365,
												"nodeType": "Return",
												"src": "6558:11:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "6395:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1353,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6462:8:6"
									},
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6412:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "6404:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6404:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6431:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "6423:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6423:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6403:35:6"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "6488:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6488:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:6:6"
									},
									"scope": 1824,
									"src": "6386:190:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										829
									],
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "6693:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1378,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6712:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6716:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6712:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1380,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "6724:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "6733:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1377,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "6703:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6703:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "6703:37:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6757:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1376,
												"id": 1385,
												"nodeType": "Return",
												"src": "6750:11:6"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6591:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1373,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6657:8:6"
									},
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6607:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "6599:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6599:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6624:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "6616:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6616:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6598:33:6"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "6683:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6683:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6682:6:6"
									},
									"scope": 1824,
									"src": "6582:186:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "6880:179:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1397,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "6898:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6916:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6908:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1398,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6908:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6908:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6898:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a205a65726f2041646472657373",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6920:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90a95530d1322b333c7941620a019b0c454dda3ff9100d19c743d31f2ecc0a45",
																"typeString": "literal_string \"ERC20: Zero Address\""
															},
															"value": "ERC20: Zero Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90a95530d1322b333c7941620a019b0c454dda3ff9100d19c743d31f2ecc0a45",
																"typeString": "literal_string \"ERC20: Zero Address\""
															}
														],
														"id": 1396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6890:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6890:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "6890:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1407,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "6960:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6979:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6971:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1408,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6971:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6971:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6960:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a205a65726f2041646472657373",
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6983:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90a95530d1322b333c7941620a019b0c454dda3ff9100d19c743d31f2ecc0a45",
																"typeString": "literal_string \"ERC20: Zero Address\""
															},
															"value": "ERC20: Zero Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90a95530d1322b333c7941620a019b0c454dda3ff9100d19c743d31f2ecc0a45",
																"typeString": "literal_string \"ERC20: Zero Address\""
															}
														],
														"id": 1406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6952:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6952:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "6952:53:6"
											},
											{
												"expression": {
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1416,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "7015:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1419,
															"indexExpression": {
																"id": 1417,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "7027:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7015:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1420,
														"indexExpression": {
															"id": 1418,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "7035:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7015:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1421,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "7046:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7015:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "7015:37:6"
											}
										]
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "6783:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6809:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "6801:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6801:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6833:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "6825:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6858:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "6850:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6850:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6791:79:6"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6880:0:6"
									},
									"scope": 1824,
									"src": "6774:285:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										841
									],
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "7201:194:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1437,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "7215:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1439,
															"indexExpression": {
																"id": 1438,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "7227:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7215:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1442,
														"indexExpression": {
															"expression": {
																"id": 1440,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7235:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7239:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7235:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7215:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7255:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1444,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7255:7:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1443,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7250:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7250:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7264:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7250:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7215:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1459,
												"nodeType": "IfStatement",
												"src": "7211:124:6",
												"trueBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "7269:66:6",
													"statements": [
														{
															"expression": {
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1449,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "7283:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1453,
																		"indexExpression": {
																			"id": 1450,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1427,
																			"src": "7295:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7283:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1454,
																	"indexExpression": {
																		"expression": {
																			"id": 1451,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7303:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7307:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7303:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7283:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1455,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "7318:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7283:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1457,
															"nodeType": "ExpressionStatement",
															"src": "7283:41:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1461,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "7362:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1462,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "7370:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "7381:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1460,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "7352:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7352:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1465,
												"nodeType": "Return",
												"src": "7345:43:6"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7074:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7177:8:6"
									},
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7104:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "7096:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7096:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7128:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "7120:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7155:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "7147:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7147:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7086:81:6"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "7195:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7195:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7194:6:6"
									},
									"scope": 1824,
									"src": "7065:330:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "7470:39:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1474,
														"name": "_noFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "7487:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1476,
													"indexExpression": {
														"id": 1475,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "7494:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7487:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1473,
												"id": 1477,
												"nodeType": "Return",
												"src": "7480:22:6"
											}
										]
									},
									"functionSelector": "27889862",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isNoFeeWallet",
									"nameLocation": "7410:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7432:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "7424:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7424:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7423:17:6"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "7464:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7464:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:6:6"
									},
									"scope": 1824,
									"src": "7401:108:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "7587:89:6",
										"statements": [
											{
												"assignments": [
													1489
												],
												"declarations": [
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "_is_sell",
														"nameLocation": "7602:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1501,
														"src": "7597:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1488,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7597:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1490,
															"name": "isLpPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "7613:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1492,
														"indexExpression": {
															"id": 1491,
															"name": "out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "7622:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7613:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7630:14:6",
														"subExpression": {
															"baseExpression": {
																"id": 1493,
																"name": "isLpPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "7631:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1495,
															"indexExpression": {
																"id": 1494,
																"name": "ins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "7640:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7631:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7613:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7597:47:6"
											},
											{
												"expression": {
													"id": 1499,
													"name": "_is_sell",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1489,
													"src": "7661:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1487,
												"id": 1500,
												"nodeType": "Return",
												"src": "7654:15:6"
											}
										]
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "is_sell",
									"nameLocation": "7524:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "ins",
												"nameLocation": "7540:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "7532:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7532:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "out",
												"nameLocation": "7553:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "7545:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7531:26:6"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "7581:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7581:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7580:6:6"
									},
									"scope": 1824,
									"src": "7515:161:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "7797:856:6",
										"statements": [
											{
												"assignments": [
													1514
												],
												"declarations": [
													{
														"constant": false,
														"id": 1514,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "7812:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1619,
														"src": "7807:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1513,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7807:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1516,
												"initialValue": {
													"hexValue": "74727565",
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7822:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7807:19:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1518,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "7844:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7858:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7850:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1519,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7850:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7850:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7844:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7862:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7836:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7836:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "7836:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1528,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "7918:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7934:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7926:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1529,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7926:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7926:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7918:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7938:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7910:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7910:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "7910:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1538,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "7996:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8005:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7996:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8008:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 1537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7988:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7988:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "7988:64:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1545,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "8075:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1546,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "8081:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1544,
															"name": "is_sell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "8067:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address) view returns (bool)"
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8067:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8088:7:6",
														"subExpression": {
															"id": 1548,
															"name": "inSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "8089:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8067:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1570,
												"nodeType": "IfStatement",
												"src": "8063:237:6",
												"trueBody": {
													"id": 1569,
													"nodeType": "Block",
													"src": "8097:203:6",
													"statements": [
														{
															"assignments": [
																1552
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1552,
																	"mutability": "mutable",
																	"name": "contractTokenBalance",
																	"nameLocation": "8119:20:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1569,
																	"src": "8111:28:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1551,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8111:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1559,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1556,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8160:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																					"typeString": "contract OneAnonataTime"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																					"typeString": "contract OneAnonataTime"
																				}
																			],
																			"id": 1555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8152:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1554,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8152:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8152:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1553,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "8142:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8142:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8111:55:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1560,
																	"name": "contractTokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "8184:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1561,
																	"name": "swapThreshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "8208:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8184:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1568,
															"nodeType": "IfStatement",
															"src": "8180:110:6",
															"trueBody": {
																"id": 1567,
																"nodeType": "Block",
																"src": "8223:67:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1564,
																					"name": "contractTokenBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1552,
																					"src": "8254:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1563,
																				"name": "internalSwap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1800,
																				"src": "8241:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8241:34:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1566,
																		"nodeType": "ExpressionStatement",
																		"src": "8241:34:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1571,
															"name": "_noFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "8314:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1573,
														"indexExpression": {
															"id": 1572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "8321:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1574,
															"name": "_noFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "8330:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1576,
														"indexExpression": {
															"id": 1575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "8337:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8330:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8314:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1583,
												"nodeType": "IfStatement",
												"src": "8310:72:6",
												"trueBody": {
													"id": 1582,
													"nodeType": "Block",
													"src": "8342:40:6",
													"statements": [
														{
															"expression": {
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1578,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "8356:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8366:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8356:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1581,
															"nodeType": "ExpressionStatement",
															"src": "8356:15:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1584,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "8391:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1586,
														"indexExpression": {
															"id": 1585,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "8399:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8391:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1587,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "8408:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8391:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "8391:23:6"
											},
											{
												"assignments": [
													1591
												],
												"declarations": [
													{
														"constant": false,
														"id": 1591,
														"mutability": "mutable",
														"name": "amountAfterFee",
														"nameLocation": "8432:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1619,
														"src": "8424:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1590,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8424:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1604,
												"initialValue": {
													"condition": {
														"components": [
															{
																"id": 1592,
																"name": "takeFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "8450:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1593,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8449:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1602,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "8530:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8449:87:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 1595,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "8483:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1597,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1504,
																		"src": "8497:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1598,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "8503:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1596,
																	"name": "is_sell",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "8489:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8489:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 1600,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "8508:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1594,
															"name": "takeTaxes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "8473:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,bool,uint256) returns (uint256)"
															}
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8473:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8424:112:6"
											},
											{
												"expression": {
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1605,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "8546:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1607,
														"indexExpression": {
															"id": 1606,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "8554:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8546:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1608,
														"name": "amountAfterFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "8561:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8546:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "8546:29:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "8599:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "8605:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1614,
															"name": "amountAfterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "8609:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1611,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "8590:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8590:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "EmitStatement",
												"src": "8585:39:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8642:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1512,
												"id": 1618,
												"nodeType": "Return",
												"src": "8635:11:6"
											}
										]
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7691:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "7710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7740:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "7732:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7732:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7760:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "7752:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7752:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7700:72:6"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "7791:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7791:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7790:6:6"
									},
									"scope": 1824,
									"src": "7682:971:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "8778:349:6",
										"statements": [
											{
												"assignments": [
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "8796:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "8788:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8788:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1634,
												"initialValue": {
													"hexValue": "30",
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8802:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8788:15:6"
											},
											{
												"condition": {
													"id": 1635,
													"name": "issell",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1624,
													"src": "8817:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1640,
												"nodeType": "IfStatement",
												"src": "8813:25:6",
												"trueBody": {
													"expression": {
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1636,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "8825:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 1637,
															"name": "sellfee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "8831:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8825:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1639,
													"nodeType": "ExpressionStatement",
													"src": "8825:13:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "8852:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8859:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8852:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1646,
												"nodeType": "IfStatement",
												"src": "8848:27:6",
												"trueBody": {
													"expression": {
														"id": 1644,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "8869:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1630,
													"id": 1645,
													"nodeType": "Return",
													"src": "8862:13:6"
												}
											},
											{
												"assignments": [
													1648
												],
												"declarations": [
													{
														"constant": false,
														"id": 1648,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "8894:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "8886:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8886:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1655,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1649,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "8907:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1650,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1632,
																	"src": "8916:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8907:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1652,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8906:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1653,
														"name": "fee_denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "8923:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8906:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8886:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1656,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "8952:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8964:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8952:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1678,
												"nodeType": "IfStatement",
												"src": "8948:138:6",
												"trueBody": {
													"id": 1677,
													"nodeType": "Block",
													"src": "8967:119:6",
													"statements": [
														{
															"expression": {
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1659,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "8981:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1664,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1662,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8997:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																					"typeString": "contract OneAnonataTime"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																					"typeString": "contract OneAnonataTime"
																				}
																			],
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8989:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1660,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8989:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8989:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8981:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1665,
																	"name": "feeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "9007:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8981:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1667,
															"nodeType": "ExpressionStatement",
															"src": "8981:35:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1669,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "9044:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1672,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "9058:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																					"typeString": "contract OneAnonataTime"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																					"typeString": "contract OneAnonataTime"
																				}
																			],
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9050:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1670,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9050:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9050:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1674,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1648,
																		"src": "9065:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1668,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9035:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9035:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1676,
															"nodeType": "EmitStatement",
															"src": "9030:45:6"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1679,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "9102:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1680,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "9111:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9102:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1682,
												"nodeType": "Return",
												"src": "9095:25:6"
											}
										]
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "takeTaxes",
									"nameLocation": "8668:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8695:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8687:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8687:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "issell",
												"nameLocation": "8714:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8709:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8709:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8738:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8730:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8677:73:6"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8769:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8769:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8768:9:6"
									},
									"scope": 1824,
									"src": "8659:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "9205:757:6",
										"statements": [
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "9232:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1799,
														"src": "9215:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1693,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9215:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1694,
															"nodeType": "ArrayTypeName",
															"src": "9215:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1701,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9253:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9239:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1696,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9243:7:6",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1697,
															"nodeType": "ArrayTypeName",
															"src": "9243:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9239:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9215:40:6"
											},
											{
												"expression": {
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1702,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "9265:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1704,
														"indexExpression": {
															"hexValue": "30",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9270:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9265:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1707,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "9283:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																	"typeString": "contract OneAnonataTime"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																	"typeString": "contract OneAnonataTime"
																}
															],
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9275:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9275:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9275:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9265:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "9265:23:6"
											},
											{
												"expression": {
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1711,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "9298:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1713,
														"indexExpression": {
															"hexValue": "31",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9303:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9298:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1714,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "9308:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IRouter02_$1078",
																	"typeString": "contract IRouter02"
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9319:4:6",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 934,
															"src": "9308:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 1716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9308:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9298:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "9298:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1719,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "9353:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1724,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1722,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "9373:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																			"typeString": "contract OneAnonataTime"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																			"typeString": "contract OneAnonataTime"
																		}
																	],
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9365:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1720,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9365:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9365:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9353:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1729,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1727,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "9388:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IRouter02_$1078",
																		"typeString": "contract IRouter02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IRouter02_$1078",
																		"typeString": "contract IRouter02"
																	}
																],
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9380:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9380:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9380:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9353:47:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9409:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1731,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9409:7:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1730,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9404:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9404:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9418:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9404:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9353:68:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1755,
												"nodeType": "IfStatement",
												"src": "9336:188:6",
												"trueBody": {
													"id": 1754,
													"nodeType": "Block",
													"src": "9432:92:6",
													"statements": [
														{
															"expression": {
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1736,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "9446:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1745,
																		"indexExpression": {
																			"arguments": [
																				{
																					"id": 1739,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "9466:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																						"typeString": "contract OneAnonataTime"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																						"typeString": "contract OneAnonataTime"
																					}
																				],
																				"id": 1738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9458:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1737,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "9458:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9458:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9446:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1746,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1743,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1215,
																				"src": "9481:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IRouter02_$1078",
																					"typeString": "contract IRouter02"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IRouter02_$1078",
																					"typeString": "contract IRouter02"
																				}
																			],
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9473:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1741,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9473:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9473:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9446:47:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9501:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1748,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9501:7:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 1747,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "9496:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9496:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 1751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9510:3:6",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "9496:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9446:67:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1753,
															"nodeType": "ExpressionStatement",
															"src": "9446:67:6"
														}
													]
												}
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1768,
															"nodeType": "Block",
															"src": "9777:2:6",
															"statements": []
														},
														"errorName": "",
														"id": 1769,
														"nodeType": "TryCatchClause",
														"src": "9777:2:6"
													},
													{
														"block": {
															"id": 1771,
															"nodeType": "Block",
															"src": "9786:31:6",
															"statements": [
																{
																	"functionReturnParameters": 1690,
																	"id": 1770,
																	"nodeType": "Return",
																	"src": "9800:7:6"
																}
															]
														},
														"errorName": "",
														"id": 1772,
														"nodeType": "TryCatchClause",
														"src": "9780:37:6"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 1758,
															"name": "contractTokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "9629:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9667:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1760,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "9686:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1763,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9716:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																		"typeString": "contract OneAnonataTime"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																		"typeString": "contract OneAnonataTime"
																	}
																],
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9708:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1761,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9708:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9708:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1765,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9739:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9745:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9739:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1756,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "9550:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRouter02_$1078",
																"typeString": "contract IRouter02"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9561:50:6",
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1034,
														"src": "9550:61:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9550:218:6",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1773,
												"nodeType": "TryStatement",
												"src": "9534:283:6"
											},
											{
												"assignments": [
													1775
												],
												"declarations": [
													{
														"constant": false,
														"id": 1775,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9831:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1799,
														"src": "9826:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1774,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9826:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1776,
												"nodeType": "VariableDeclarationStatement",
												"src": "9826:12:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1779,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9861:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																		"typeString": "contract OneAnonataTime"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																		"typeString": "contract OneAnonataTime"
																	}
																],
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9853:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1777,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9853:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9853:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9867:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "9853:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9877:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9853:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1798,
												"nodeType": "IfStatement",
												"src": "9849:106:6",
												"trueBody": {
													"expression": {
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1784,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "9893:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																null
															],
															"id": 1785,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "9892:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$__$",
																"typeString": "tuple(bool,)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"hexValue": "",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9952:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"id": 1786,
																		"name": "oatAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1212,
																		"src": "9906:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9917:4:6",
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "9906:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"names": [
																	"value"
																],
																"nodeType": "FunctionCallOptions",
																"options": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1790,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "9937:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																						"typeString": "contract OneAnonataTime"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_OneAnonataTime_$1824",
																						"typeString": "contract OneAnonataTime"
																					}
																				],
																				"id": 1789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9929:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1788,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "9929:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9929:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9943:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "9929:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"src": "9906:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9906:49:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "tuple(bool,bytes memory)"
															}
														},
														"src": "9892:63:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1797,
													"nodeType": "ExpressionStatement",
													"src": "9892:63:6"
												}
											}
										]
									},
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1689,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1688,
												"name": "inSwapFlag",
												"nameLocations": [
													"9194:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1243,
												"src": "9194:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9194:10:6"
										}
									],
									"name": "internalSwap",
									"nameLocation": "9142:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "contractTokenBalance",
												"nameLocation": "9163:20:6",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "9155:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9154:30:6"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9205:0:6"
									},
									"scope": 1824,
									"src": "9133:829:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "10028:145:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1808,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "10046:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10056:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "10046:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206c6f776572206e6f742061636365707465642e",
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10061:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dad2f8886c08710606ebfd8c376d6126d3e9e6b55090812a14efb9583dd417d",
																"typeString": "literal_string \"Amount lower not accepted.\""
															},
															"value": "Amount lower not accepted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dad2f8886c08710606ebfd8c376d6126d3e9e6b55090812a14efb9583dd417d",
																"typeString": "literal_string \"Amount lower not accepted.\""
															}
														],
														"id": 1807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10038:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10038:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "10038:52:6"
											},
											{
												"expression": {
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1814,
														"name": "swapThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "10100:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1815,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "10116:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10100:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1817,
												"nodeType": "ExpressionStatement",
												"src": "10100:22:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1819,
															"name": "swapThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "10152:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1818,
														"name": "updateThresold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "10137:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10137:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "EmitStatement",
												"src": "10132:34:6"
											}
										]
									},
									"functionSelector": "694e80c3",
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1805,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1804,
												"name": "onlyOwner",
												"nameLocations": [
													"10018:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "10018:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "10018:9:6"
										}
									],
									"name": "changeThreshold",
									"nameLocation": "9977:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10001:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "9993:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9993:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9992:16:6"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10028:0:6"
									},
									"scope": 1824,
									"src": "9968:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1825,
							"src": "3811:6364:6",
							"usedErrors": []
						}
					],
					"src": "908:9268:6"
				},
				"id": 6
			}
		}
	}
}